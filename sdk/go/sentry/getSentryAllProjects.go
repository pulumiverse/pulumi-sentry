// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry/internal"
)

// Return a list of projects available to the authenticated session.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sentry.GetSentryAllProjects(ctx, &sentry.GetSentryAllProjectsArgs{
//				Organization: "my-organization",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSentryAllProjects(ctx *pulumi.Context, args *GetSentryAllProjectsArgs, opts ...pulumi.InvokeOption) (*GetSentryAllProjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSentryAllProjectsResult
	err := ctx.Invoke("sentry:index/getSentryAllProjects:getSentryAllProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSentryAllProjects.
type GetSentryAllProjectsArgs struct {
	// The slug of the organization the resource belongs to.
	Organization string `pulumi:"organization"`
}

// A collection of values returned by getSentryAllProjects.
type GetSentryAllProjectsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The slug of the organization the resource belongs to.
	Organization string `pulumi:"organization"`
	// The slugs of the projects.
	ProjectSlugs []string `pulumi:"projectSlugs"`
	// The list of projects.
	Projects []GetSentryAllProjectsProject `pulumi:"projects"`
}

func GetSentryAllProjectsOutput(ctx *pulumi.Context, args GetSentryAllProjectsOutputArgs, opts ...pulumi.InvokeOption) GetSentryAllProjectsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSentryAllProjectsResult, error) {
			args := v.(GetSentryAllProjectsArgs)
			r, err := GetSentryAllProjects(ctx, &args, opts...)
			var s GetSentryAllProjectsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSentryAllProjectsResultOutput)
}

// A collection of arguments for invoking getSentryAllProjects.
type GetSentryAllProjectsOutputArgs struct {
	// The slug of the organization the resource belongs to.
	Organization pulumi.StringInput `pulumi:"organization"`
}

func (GetSentryAllProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryAllProjectsArgs)(nil)).Elem()
}

// A collection of values returned by getSentryAllProjects.
type GetSentryAllProjectsResultOutput struct{ *pulumi.OutputState }

func (GetSentryAllProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryAllProjectsResult)(nil)).Elem()
}

func (o GetSentryAllProjectsResultOutput) ToGetSentryAllProjectsResultOutput() GetSentryAllProjectsResultOutput {
	return o
}

func (o GetSentryAllProjectsResultOutput) ToGetSentryAllProjectsResultOutputWithContext(ctx context.Context) GetSentryAllProjectsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSentryAllProjectsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryAllProjectsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The slug of the organization the resource belongs to.
func (o GetSentryAllProjectsResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryAllProjectsResult) string { return v.Organization }).(pulumi.StringOutput)
}

// The slugs of the projects.
func (o GetSentryAllProjectsResultOutput) ProjectSlugs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSentryAllProjectsResult) []string { return v.ProjectSlugs }).(pulumi.StringArrayOutput)
}

// The list of projects.
func (o GetSentryAllProjectsResultOutput) Projects() GetSentryAllProjectsProjectArrayOutput {
	return o.ApplyT(func(v GetSentryAllProjectsResult) []GetSentryAllProjectsProject { return v.Projects }).(GetSentryAllProjectsProjectArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSentryAllProjectsResultOutput{})
}
