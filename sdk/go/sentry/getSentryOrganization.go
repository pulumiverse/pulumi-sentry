// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry/internal"
)

// Sentry Organization data source.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Retrieve an organization
//			_, err := sentry.LookupSentryOrganization(ctx, &sentry.LookupSentryOrganizationArgs{
//				Slug: "my-organization",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSentryOrganization(ctx *pulumi.Context, args *LookupSentryOrganizationArgs, opts ...pulumi.InvokeOption) (*LookupSentryOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSentryOrganizationResult
	err := ctx.Invoke("sentry:index/getSentryOrganization:getSentryOrganization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSentryOrganization.
type LookupSentryOrganizationArgs struct {
	// The unique URL slug for this organization.
	Slug string `pulumi:"slug"`
}

// A collection of values returned by getSentryOrganization.
type LookupSentryOrganizationResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The internal ID for this organization.
	InternalId string `pulumi:"internalId"`
	// The human readable name for this organization.
	Name string `pulumi:"name"`
	// The unique URL slug for this organization.
	Slug string `pulumi:"slug"`
}

func LookupSentryOrganizationOutput(ctx *pulumi.Context, args LookupSentryOrganizationOutputArgs, opts ...pulumi.InvokeOption) LookupSentryOrganizationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSentryOrganizationResultOutput, error) {
			args := v.(LookupSentryOrganizationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSentryOrganizationResult
			secret, err := ctx.InvokePackageRaw("sentry:index/getSentryOrganization:getSentryOrganization", args, &rv, "", opts...)
			if err != nil {
				return LookupSentryOrganizationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSentryOrganizationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSentryOrganizationResultOutput), nil
			}
			return output, nil
		}).(LookupSentryOrganizationResultOutput)
}

// A collection of arguments for invoking getSentryOrganization.
type LookupSentryOrganizationOutputArgs struct {
	// The unique URL slug for this organization.
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (LookupSentryOrganizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSentryOrganizationArgs)(nil)).Elem()
}

// A collection of values returned by getSentryOrganization.
type LookupSentryOrganizationResultOutput struct{ *pulumi.OutputState }

func (LookupSentryOrganizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSentryOrganizationResult)(nil)).Elem()
}

func (o LookupSentryOrganizationResultOutput) ToLookupSentryOrganizationResultOutput() LookupSentryOrganizationResultOutput {
	return o
}

func (o LookupSentryOrganizationResultOutput) ToLookupSentryOrganizationResultOutputWithContext(ctx context.Context) LookupSentryOrganizationResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSentryOrganizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryOrganizationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The internal ID for this organization.
func (o LookupSentryOrganizationResultOutput) InternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryOrganizationResult) string { return v.InternalId }).(pulumi.StringOutput)
}

// The human readable name for this organization.
func (o LookupSentryOrganizationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryOrganizationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The unique URL slug for this organization.
func (o LookupSentryOrganizationResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryOrganizationResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSentryOrganizationResultOutput{})
}
