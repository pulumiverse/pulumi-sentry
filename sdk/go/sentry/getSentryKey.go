// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry/internal"
)

// Retrieve a Project's Client Key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sentry.LookupSentryKey(ctx, &sentry.LookupSentryKeyArgs{
//				Name:         pulumi.StringRef("Default"),
//				Organization: "my-organization",
//				Project:      "web-app",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = sentry.LookupSentryKey(ctx, &sentry.LookupSentryKeyArgs{
//				First:        pulumi.BoolRef(true),
//				Organization: "my-organization",
//				Project:      "web-app",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSentryKey(ctx *pulumi.Context, args *LookupSentryKeyArgs, opts ...pulumi.InvokeOption) (*LookupSentryKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSentryKeyResult
	err := ctx.Invoke("sentry:index/getSentryKey:getSentryKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSentryKey.
type LookupSentryKeyArgs struct {
	// Boolean flag indicating that we want the first key of the returned keys.
	First *bool `pulumi:"first"`
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The name of the client key.
	Name *string `pulumi:"name"`
	// The slug of the organization the resource belongs to.
	Organization string `pulumi:"organization"`
	// The slug of the project the resource belongs to.
	Project string `pulumi:"project"`
}

// A collection of values returned by getSentryKey.
type LookupSentryKeyResult struct {
	// Security header endpoint for features like CSP and Expect-CT reports.
	DsnCsp string `pulumi:"dsnCsp"`
	// The DSN tells the SDK where to send the events to.
	DsnPublic string `pulumi:"dsnPublic"`
	// Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.
	DsnSecret string `pulumi:"dsnSecret"`
	// Boolean flag indicating that we want the first key of the returned keys.
	First *bool `pulumi:"first"`
	// The ID of this resource.
	Id *string `pulumi:"id"`
	// The name of the client key.
	Name *string `pulumi:"name"`
	// The slug of the organization the resource belongs to.
	Organization string `pulumi:"organization"`
	// The slug of the project the resource belongs to.
	Project string `pulumi:"project"`
	// The ID of the project that the key belongs to.
	ProjectId string `pulumi:"projectId"`
	// The public key.
	Public string `pulumi:"public"`
	// Number of events that can be reported within the rate limit window.
	RateLimitCount int `pulumi:"rateLimitCount"`
	// Length of time that will be considered when checking the rate limit.
	RateLimitWindow int `pulumi:"rateLimitWindow"`
	// The secret key.
	Secret string `pulumi:"secret"`
}

func LookupSentryKeyOutput(ctx *pulumi.Context, args LookupSentryKeyOutputArgs, opts ...pulumi.InvokeOption) LookupSentryKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSentryKeyResult, error) {
			args := v.(LookupSentryKeyArgs)
			r, err := LookupSentryKey(ctx, &args, opts...)
			var s LookupSentryKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSentryKeyResultOutput)
}

// A collection of arguments for invoking getSentryKey.
type LookupSentryKeyOutputArgs struct {
	// Boolean flag indicating that we want the first key of the returned keys.
	First pulumi.BoolPtrInput `pulumi:"first"`
	// The ID of this resource.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the client key.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The slug of the organization the resource belongs to.
	Organization pulumi.StringInput `pulumi:"organization"`
	// The slug of the project the resource belongs to.
	Project pulumi.StringInput `pulumi:"project"`
}

func (LookupSentryKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSentryKeyArgs)(nil)).Elem()
}

// A collection of values returned by getSentryKey.
type LookupSentryKeyResultOutput struct{ *pulumi.OutputState }

func (LookupSentryKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSentryKeyResult)(nil)).Elem()
}

func (o LookupSentryKeyResultOutput) ToLookupSentryKeyResultOutput() LookupSentryKeyResultOutput {
	return o
}

func (o LookupSentryKeyResultOutput) ToLookupSentryKeyResultOutputWithContext(ctx context.Context) LookupSentryKeyResultOutput {
	return o
}

// Security header endpoint for features like CSP and Expect-CT reports.
func (o LookupSentryKeyResultOutput) DsnCsp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) string { return v.DsnCsp }).(pulumi.StringOutput)
}

// The DSN tells the SDK where to send the events to.
func (o LookupSentryKeyResultOutput) DsnPublic() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) string { return v.DsnPublic }).(pulumi.StringOutput)
}

// Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.
func (o LookupSentryKeyResultOutput) DsnSecret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) string { return v.DsnSecret }).(pulumi.StringOutput)
}

// Boolean flag indicating that we want the first key of the returned keys.
func (o LookupSentryKeyResultOutput) First() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) *bool { return v.First }).(pulumi.BoolPtrOutput)
}

// The ID of this resource.
func (o LookupSentryKeyResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the client key.
func (o LookupSentryKeyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The slug of the organization the resource belongs to.
func (o LookupSentryKeyResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) string { return v.Organization }).(pulumi.StringOutput)
}

// The slug of the project the resource belongs to.
func (o LookupSentryKeyResultOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) string { return v.Project }).(pulumi.StringOutput)
}

// The ID of the project that the key belongs to.
func (o LookupSentryKeyResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// The public key.
func (o LookupSentryKeyResultOutput) Public() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) string { return v.Public }).(pulumi.StringOutput)
}

// Number of events that can be reported within the rate limit window.
func (o LookupSentryKeyResultOutput) RateLimitCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) int { return v.RateLimitCount }).(pulumi.IntOutput)
}

// Length of time that will be considered when checking the rate limit.
func (o LookupSentryKeyResultOutput) RateLimitWindow() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) int { return v.RateLimitWindow }).(pulumi.IntOutput)
}

// The secret key.
func (o LookupSentryKeyResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryKeyResult) string { return v.Secret }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSentryKeyResultOutput{})
}
