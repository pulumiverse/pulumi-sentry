// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry/internal"
)

// Manage a PagerDuty service integration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			pagerduty, err := sentry.GetSentryOrganizationIntegration(ctx, &sentry.GetSentryOrganizationIntegrationArgs{
//				Organization: "my-organization",
//				ProviderKey:  "pagerduty",
//				Name:         "my-pagerduty-organization",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// Associate a PagerDuty service and integration key with a Sentry PagerDuty integration
//			_, err = sentry.NewSentryIntegrationPagerDuty(ctx, "test", &sentry.SentryIntegrationPagerDutyArgs{
//				Organization:   pulumi.String("my-organization"),
//				IntegrationId:  pulumi.String(pagerduty.Id),
//				Service:        pulumi.String("my-pagerduty-service"),
//				IntegrationKey: pulumi.String("my-pagerduty-integration-key"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// import using the organization slug from the URL:
//
// https://sentry.io/api/0/organizations/[org-slug]/integrations/
//
// [integration-id] is the top-level `id` of the PagerDuty organization integration
//
// [service-id] is the `id` of the service_table record to import under the configData property
//
// ```sh
// $ pulumi import sentry:index/sentryIntegrationPagerDuty:SentryIntegrationPagerDuty default org-slug/integration-id/service-id
// ```
type SentryIntegrationPagerDuty struct {
	pulumi.CustomResourceState

	// The ID of the PagerDuty integration. Source from the URL `https://<organization>.sentry.io/settings/integrations/pagerduty/<integration-id>/` or use the `getSentryOrganizationIntegration` data source.
	IntegrationId pulumi.StringOutput `pulumi:"integrationId"`
	// The integration key of the PagerDuty service.
	IntegrationKey pulumi.StringOutput `pulumi:"integrationKey"`
	// The slug of the organization the resource belongs to.
	Organization pulumi.StringOutput `pulumi:"organization"`
	// The name of the PagerDuty service.
	Service pulumi.StringOutput `pulumi:"service"`
}

// NewSentryIntegrationPagerDuty registers a new resource with the given unique name, arguments, and options.
func NewSentryIntegrationPagerDuty(ctx *pulumi.Context,
	name string, args *SentryIntegrationPagerDutyArgs, opts ...pulumi.ResourceOption) (*SentryIntegrationPagerDuty, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IntegrationId == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationId'")
	}
	if args.IntegrationKey == nil {
		return nil, errors.New("invalid value for required argument 'IntegrationKey'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SentryIntegrationPagerDuty
	err := ctx.RegisterResource("sentry:index/sentryIntegrationPagerDuty:SentryIntegrationPagerDuty", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSentryIntegrationPagerDuty gets an existing SentryIntegrationPagerDuty resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSentryIntegrationPagerDuty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SentryIntegrationPagerDutyState, opts ...pulumi.ResourceOption) (*SentryIntegrationPagerDuty, error) {
	var resource SentryIntegrationPagerDuty
	err := ctx.ReadResource("sentry:index/sentryIntegrationPagerDuty:SentryIntegrationPagerDuty", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SentryIntegrationPagerDuty resources.
type sentryIntegrationPagerDutyState struct {
	// The ID of the PagerDuty integration. Source from the URL `https://<organization>.sentry.io/settings/integrations/pagerduty/<integration-id>/` or use the `getSentryOrganizationIntegration` data source.
	IntegrationId *string `pulumi:"integrationId"`
	// The integration key of the PagerDuty service.
	IntegrationKey *string `pulumi:"integrationKey"`
	// The slug of the organization the resource belongs to.
	Organization *string `pulumi:"organization"`
	// The name of the PagerDuty service.
	Service *string `pulumi:"service"`
}

type SentryIntegrationPagerDutyState struct {
	// The ID of the PagerDuty integration. Source from the URL `https://<organization>.sentry.io/settings/integrations/pagerduty/<integration-id>/` or use the `getSentryOrganizationIntegration` data source.
	IntegrationId pulumi.StringPtrInput
	// The integration key of the PagerDuty service.
	IntegrationKey pulumi.StringPtrInput
	// The slug of the organization the resource belongs to.
	Organization pulumi.StringPtrInput
	// The name of the PagerDuty service.
	Service pulumi.StringPtrInput
}

func (SentryIntegrationPagerDutyState) ElementType() reflect.Type {
	return reflect.TypeOf((*sentryIntegrationPagerDutyState)(nil)).Elem()
}

type sentryIntegrationPagerDutyArgs struct {
	// The ID of the PagerDuty integration. Source from the URL `https://<organization>.sentry.io/settings/integrations/pagerduty/<integration-id>/` or use the `getSentryOrganizationIntegration` data source.
	IntegrationId string `pulumi:"integrationId"`
	// The integration key of the PagerDuty service.
	IntegrationKey string `pulumi:"integrationKey"`
	// The slug of the organization the resource belongs to.
	Organization string `pulumi:"organization"`
	// The name of the PagerDuty service.
	Service string `pulumi:"service"`
}

// The set of arguments for constructing a SentryIntegrationPagerDuty resource.
type SentryIntegrationPagerDutyArgs struct {
	// The ID of the PagerDuty integration. Source from the URL `https://<organization>.sentry.io/settings/integrations/pagerduty/<integration-id>/` or use the `getSentryOrganizationIntegration` data source.
	IntegrationId pulumi.StringInput
	// The integration key of the PagerDuty service.
	IntegrationKey pulumi.StringInput
	// The slug of the organization the resource belongs to.
	Organization pulumi.StringInput
	// The name of the PagerDuty service.
	Service pulumi.StringInput
}

func (SentryIntegrationPagerDutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sentryIntegrationPagerDutyArgs)(nil)).Elem()
}

type SentryIntegrationPagerDutyInput interface {
	pulumi.Input

	ToSentryIntegrationPagerDutyOutput() SentryIntegrationPagerDutyOutput
	ToSentryIntegrationPagerDutyOutputWithContext(ctx context.Context) SentryIntegrationPagerDutyOutput
}

func (*SentryIntegrationPagerDuty) ElementType() reflect.Type {
	return reflect.TypeOf((**SentryIntegrationPagerDuty)(nil)).Elem()
}

func (i *SentryIntegrationPagerDuty) ToSentryIntegrationPagerDutyOutput() SentryIntegrationPagerDutyOutput {
	return i.ToSentryIntegrationPagerDutyOutputWithContext(context.Background())
}

func (i *SentryIntegrationPagerDuty) ToSentryIntegrationPagerDutyOutputWithContext(ctx context.Context) SentryIntegrationPagerDutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryIntegrationPagerDutyOutput)
}

// SentryIntegrationPagerDutyArrayInput is an input type that accepts SentryIntegrationPagerDutyArray and SentryIntegrationPagerDutyArrayOutput values.
// You can construct a concrete instance of `SentryIntegrationPagerDutyArrayInput` via:
//
//	SentryIntegrationPagerDutyArray{ SentryIntegrationPagerDutyArgs{...} }
type SentryIntegrationPagerDutyArrayInput interface {
	pulumi.Input

	ToSentryIntegrationPagerDutyArrayOutput() SentryIntegrationPagerDutyArrayOutput
	ToSentryIntegrationPagerDutyArrayOutputWithContext(context.Context) SentryIntegrationPagerDutyArrayOutput
}

type SentryIntegrationPagerDutyArray []SentryIntegrationPagerDutyInput

func (SentryIntegrationPagerDutyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SentryIntegrationPagerDuty)(nil)).Elem()
}

func (i SentryIntegrationPagerDutyArray) ToSentryIntegrationPagerDutyArrayOutput() SentryIntegrationPagerDutyArrayOutput {
	return i.ToSentryIntegrationPagerDutyArrayOutputWithContext(context.Background())
}

func (i SentryIntegrationPagerDutyArray) ToSentryIntegrationPagerDutyArrayOutputWithContext(ctx context.Context) SentryIntegrationPagerDutyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryIntegrationPagerDutyArrayOutput)
}

// SentryIntegrationPagerDutyMapInput is an input type that accepts SentryIntegrationPagerDutyMap and SentryIntegrationPagerDutyMapOutput values.
// You can construct a concrete instance of `SentryIntegrationPagerDutyMapInput` via:
//
//	SentryIntegrationPagerDutyMap{ "key": SentryIntegrationPagerDutyArgs{...} }
type SentryIntegrationPagerDutyMapInput interface {
	pulumi.Input

	ToSentryIntegrationPagerDutyMapOutput() SentryIntegrationPagerDutyMapOutput
	ToSentryIntegrationPagerDutyMapOutputWithContext(context.Context) SentryIntegrationPagerDutyMapOutput
}

type SentryIntegrationPagerDutyMap map[string]SentryIntegrationPagerDutyInput

func (SentryIntegrationPagerDutyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SentryIntegrationPagerDuty)(nil)).Elem()
}

func (i SentryIntegrationPagerDutyMap) ToSentryIntegrationPagerDutyMapOutput() SentryIntegrationPagerDutyMapOutput {
	return i.ToSentryIntegrationPagerDutyMapOutputWithContext(context.Background())
}

func (i SentryIntegrationPagerDutyMap) ToSentryIntegrationPagerDutyMapOutputWithContext(ctx context.Context) SentryIntegrationPagerDutyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryIntegrationPagerDutyMapOutput)
}

type SentryIntegrationPagerDutyOutput struct{ *pulumi.OutputState }

func (SentryIntegrationPagerDutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SentryIntegrationPagerDuty)(nil)).Elem()
}

func (o SentryIntegrationPagerDutyOutput) ToSentryIntegrationPagerDutyOutput() SentryIntegrationPagerDutyOutput {
	return o
}

func (o SentryIntegrationPagerDutyOutput) ToSentryIntegrationPagerDutyOutputWithContext(ctx context.Context) SentryIntegrationPagerDutyOutput {
	return o
}

// The ID of the PagerDuty integration. Source from the URL `https://<organization>.sentry.io/settings/integrations/pagerduty/<integration-id>/` or use the `getSentryOrganizationIntegration` data source.
func (o SentryIntegrationPagerDutyOutput) IntegrationId() pulumi.StringOutput {
	return o.ApplyT(func(v *SentryIntegrationPagerDuty) pulumi.StringOutput { return v.IntegrationId }).(pulumi.StringOutput)
}

// The integration key of the PagerDuty service.
func (o SentryIntegrationPagerDutyOutput) IntegrationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *SentryIntegrationPagerDuty) pulumi.StringOutput { return v.IntegrationKey }).(pulumi.StringOutput)
}

// The slug of the organization the resource belongs to.
func (o SentryIntegrationPagerDutyOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *SentryIntegrationPagerDuty) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

// The name of the PagerDuty service.
func (o SentryIntegrationPagerDutyOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *SentryIntegrationPagerDuty) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

type SentryIntegrationPagerDutyArrayOutput struct{ *pulumi.OutputState }

func (SentryIntegrationPagerDutyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SentryIntegrationPagerDuty)(nil)).Elem()
}

func (o SentryIntegrationPagerDutyArrayOutput) ToSentryIntegrationPagerDutyArrayOutput() SentryIntegrationPagerDutyArrayOutput {
	return o
}

func (o SentryIntegrationPagerDutyArrayOutput) ToSentryIntegrationPagerDutyArrayOutputWithContext(ctx context.Context) SentryIntegrationPagerDutyArrayOutput {
	return o
}

func (o SentryIntegrationPagerDutyArrayOutput) Index(i pulumi.IntInput) SentryIntegrationPagerDutyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SentryIntegrationPagerDuty {
		return vs[0].([]*SentryIntegrationPagerDuty)[vs[1].(int)]
	}).(SentryIntegrationPagerDutyOutput)
}

type SentryIntegrationPagerDutyMapOutput struct{ *pulumi.OutputState }

func (SentryIntegrationPagerDutyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SentryIntegrationPagerDuty)(nil)).Elem()
}

func (o SentryIntegrationPagerDutyMapOutput) ToSentryIntegrationPagerDutyMapOutput() SentryIntegrationPagerDutyMapOutput {
	return o
}

func (o SentryIntegrationPagerDutyMapOutput) ToSentryIntegrationPagerDutyMapOutputWithContext(ctx context.Context) SentryIntegrationPagerDutyMapOutput {
	return o
}

func (o SentryIntegrationPagerDutyMapOutput) MapIndex(k pulumi.StringInput) SentryIntegrationPagerDutyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SentryIntegrationPagerDuty {
		return vs[0].(map[string]*SentryIntegrationPagerDuty)[vs[1].(string)]
	}).(SentryIntegrationPagerDutyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SentryIntegrationPagerDutyInput)(nil)).Elem(), &SentryIntegrationPagerDuty{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryIntegrationPagerDutyArrayInput)(nil)).Elem(), SentryIntegrationPagerDutyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryIntegrationPagerDutyMapInput)(nil)).Elem(), SentryIntegrationPagerDutyMap{})
	pulumi.RegisterOutputType(SentryIntegrationPagerDutyOutput{})
	pulumi.RegisterOutputType(SentryIntegrationPagerDutyArrayOutput{})
	pulumi.RegisterOutputType(SentryIntegrationPagerDutyMapOutput{})
}
