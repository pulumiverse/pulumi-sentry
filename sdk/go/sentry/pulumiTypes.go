// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry/internal"
)

var _ = internal.GetEnvOrDefault

type SentryDashboardWidget struct {
	DisplayType string `pulumi:"displayType"`
	// The ID of this resource.
	Id         *string                      `pulumi:"id"`
	Interval   *string                      `pulumi:"interval"`
	Layout     SentryDashboardWidgetLayout  `pulumi:"layout"`
	Limit      *int                         `pulumi:"limit"`
	Queries    []SentryDashboardWidgetQuery `pulumi:"queries"`
	Title      string                       `pulumi:"title"`
	WidgetType *string                      `pulumi:"widgetType"`
}

// SentryDashboardWidgetInput is an input type that accepts SentryDashboardWidgetArgs and SentryDashboardWidgetOutput values.
// You can construct a concrete instance of `SentryDashboardWidgetInput` via:
//
//	SentryDashboardWidgetArgs{...}
type SentryDashboardWidgetInput interface {
	pulumi.Input

	ToSentryDashboardWidgetOutput() SentryDashboardWidgetOutput
	ToSentryDashboardWidgetOutputWithContext(context.Context) SentryDashboardWidgetOutput
}

type SentryDashboardWidgetArgs struct {
	DisplayType pulumi.StringInput `pulumi:"displayType"`
	// The ID of this resource.
	Id         pulumi.StringPtrInput                `pulumi:"id"`
	Interval   pulumi.StringPtrInput                `pulumi:"interval"`
	Layout     SentryDashboardWidgetLayoutInput     `pulumi:"layout"`
	Limit      pulumi.IntPtrInput                   `pulumi:"limit"`
	Queries    SentryDashboardWidgetQueryArrayInput `pulumi:"queries"`
	Title      pulumi.StringInput                   `pulumi:"title"`
	WidgetType pulumi.StringPtrInput                `pulumi:"widgetType"`
}

func (SentryDashboardWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryDashboardWidget)(nil)).Elem()
}

func (i SentryDashboardWidgetArgs) ToSentryDashboardWidgetOutput() SentryDashboardWidgetOutput {
	return i.ToSentryDashboardWidgetOutputWithContext(context.Background())
}

func (i SentryDashboardWidgetArgs) ToSentryDashboardWidgetOutputWithContext(ctx context.Context) SentryDashboardWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryDashboardWidgetOutput)
}

// SentryDashboardWidgetArrayInput is an input type that accepts SentryDashboardWidgetArray and SentryDashboardWidgetArrayOutput values.
// You can construct a concrete instance of `SentryDashboardWidgetArrayInput` via:
//
//	SentryDashboardWidgetArray{ SentryDashboardWidgetArgs{...} }
type SentryDashboardWidgetArrayInput interface {
	pulumi.Input

	ToSentryDashboardWidgetArrayOutput() SentryDashboardWidgetArrayOutput
	ToSentryDashboardWidgetArrayOutputWithContext(context.Context) SentryDashboardWidgetArrayOutput
}

type SentryDashboardWidgetArray []SentryDashboardWidgetInput

func (SentryDashboardWidgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentryDashboardWidget)(nil)).Elem()
}

func (i SentryDashboardWidgetArray) ToSentryDashboardWidgetArrayOutput() SentryDashboardWidgetArrayOutput {
	return i.ToSentryDashboardWidgetArrayOutputWithContext(context.Background())
}

func (i SentryDashboardWidgetArray) ToSentryDashboardWidgetArrayOutputWithContext(ctx context.Context) SentryDashboardWidgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryDashboardWidgetArrayOutput)
}

type SentryDashboardWidgetOutput struct{ *pulumi.OutputState }

func (SentryDashboardWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryDashboardWidget)(nil)).Elem()
}

func (o SentryDashboardWidgetOutput) ToSentryDashboardWidgetOutput() SentryDashboardWidgetOutput {
	return o
}

func (o SentryDashboardWidgetOutput) ToSentryDashboardWidgetOutputWithContext(ctx context.Context) SentryDashboardWidgetOutput {
	return o
}

func (o SentryDashboardWidgetOutput) DisplayType() pulumi.StringOutput {
	return o.ApplyT(func(v SentryDashboardWidget) string { return v.DisplayType }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o SentryDashboardWidgetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryDashboardWidget) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SentryDashboardWidgetOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryDashboardWidget) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

func (o SentryDashboardWidgetOutput) Layout() SentryDashboardWidgetLayoutOutput {
	return o.ApplyT(func(v SentryDashboardWidget) SentryDashboardWidgetLayout { return v.Layout }).(SentryDashboardWidgetLayoutOutput)
}

func (o SentryDashboardWidgetOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SentryDashboardWidget) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o SentryDashboardWidgetOutput) Queries() SentryDashboardWidgetQueryArrayOutput {
	return o.ApplyT(func(v SentryDashboardWidget) []SentryDashboardWidgetQuery { return v.Queries }).(SentryDashboardWidgetQueryArrayOutput)
}

func (o SentryDashboardWidgetOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v SentryDashboardWidget) string { return v.Title }).(pulumi.StringOutput)
}

func (o SentryDashboardWidgetOutput) WidgetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryDashboardWidget) *string { return v.WidgetType }).(pulumi.StringPtrOutput)
}

type SentryDashboardWidgetArrayOutput struct{ *pulumi.OutputState }

func (SentryDashboardWidgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentryDashboardWidget)(nil)).Elem()
}

func (o SentryDashboardWidgetArrayOutput) ToSentryDashboardWidgetArrayOutput() SentryDashboardWidgetArrayOutput {
	return o
}

func (o SentryDashboardWidgetArrayOutput) ToSentryDashboardWidgetArrayOutputWithContext(ctx context.Context) SentryDashboardWidgetArrayOutput {
	return o
}

func (o SentryDashboardWidgetArrayOutput) Index(i pulumi.IntInput) SentryDashboardWidgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SentryDashboardWidget {
		return vs[0].([]SentryDashboardWidget)[vs[1].(int)]
	}).(SentryDashboardWidgetOutput)
}

type SentryDashboardWidgetLayout struct {
	H    int `pulumi:"h"`
	MinH int `pulumi:"minH"`
	W    int `pulumi:"w"`
	X    int `pulumi:"x"`
	Y    int `pulumi:"y"`
}

// SentryDashboardWidgetLayoutInput is an input type that accepts SentryDashboardWidgetLayoutArgs and SentryDashboardWidgetLayoutOutput values.
// You can construct a concrete instance of `SentryDashboardWidgetLayoutInput` via:
//
//	SentryDashboardWidgetLayoutArgs{...}
type SentryDashboardWidgetLayoutInput interface {
	pulumi.Input

	ToSentryDashboardWidgetLayoutOutput() SentryDashboardWidgetLayoutOutput
	ToSentryDashboardWidgetLayoutOutputWithContext(context.Context) SentryDashboardWidgetLayoutOutput
}

type SentryDashboardWidgetLayoutArgs struct {
	H    pulumi.IntInput `pulumi:"h"`
	MinH pulumi.IntInput `pulumi:"minH"`
	W    pulumi.IntInput `pulumi:"w"`
	X    pulumi.IntInput `pulumi:"x"`
	Y    pulumi.IntInput `pulumi:"y"`
}

func (SentryDashboardWidgetLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryDashboardWidgetLayout)(nil)).Elem()
}

func (i SentryDashboardWidgetLayoutArgs) ToSentryDashboardWidgetLayoutOutput() SentryDashboardWidgetLayoutOutput {
	return i.ToSentryDashboardWidgetLayoutOutputWithContext(context.Background())
}

func (i SentryDashboardWidgetLayoutArgs) ToSentryDashboardWidgetLayoutOutputWithContext(ctx context.Context) SentryDashboardWidgetLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryDashboardWidgetLayoutOutput)
}

type SentryDashboardWidgetLayoutOutput struct{ *pulumi.OutputState }

func (SentryDashboardWidgetLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryDashboardWidgetLayout)(nil)).Elem()
}

func (o SentryDashboardWidgetLayoutOutput) ToSentryDashboardWidgetLayoutOutput() SentryDashboardWidgetLayoutOutput {
	return o
}

func (o SentryDashboardWidgetLayoutOutput) ToSentryDashboardWidgetLayoutOutputWithContext(ctx context.Context) SentryDashboardWidgetLayoutOutput {
	return o
}

func (o SentryDashboardWidgetLayoutOutput) H() pulumi.IntOutput {
	return o.ApplyT(func(v SentryDashboardWidgetLayout) int { return v.H }).(pulumi.IntOutput)
}

func (o SentryDashboardWidgetLayoutOutput) MinH() pulumi.IntOutput {
	return o.ApplyT(func(v SentryDashboardWidgetLayout) int { return v.MinH }).(pulumi.IntOutput)
}

func (o SentryDashboardWidgetLayoutOutput) W() pulumi.IntOutput {
	return o.ApplyT(func(v SentryDashboardWidgetLayout) int { return v.W }).(pulumi.IntOutput)
}

func (o SentryDashboardWidgetLayoutOutput) X() pulumi.IntOutput {
	return o.ApplyT(func(v SentryDashboardWidgetLayout) int { return v.X }).(pulumi.IntOutput)
}

func (o SentryDashboardWidgetLayoutOutput) Y() pulumi.IntOutput {
	return o.ApplyT(func(v SentryDashboardWidgetLayout) int { return v.Y }).(pulumi.IntOutput)
}

type SentryDashboardWidgetQuery struct {
	Aggregates   []string `pulumi:"aggregates"`
	Columns      []string `pulumi:"columns"`
	Conditions   *string  `pulumi:"conditions"`
	FieldAliases []string `pulumi:"fieldAliases"`
	Fields       []string `pulumi:"fields"`
	// The ID of this resource.
	Id      *string `pulumi:"id"`
	Name    *string `pulumi:"name"`
	OrderBy *string `pulumi:"orderBy"`
}

// SentryDashboardWidgetQueryInput is an input type that accepts SentryDashboardWidgetQueryArgs and SentryDashboardWidgetQueryOutput values.
// You can construct a concrete instance of `SentryDashboardWidgetQueryInput` via:
//
//	SentryDashboardWidgetQueryArgs{...}
type SentryDashboardWidgetQueryInput interface {
	pulumi.Input

	ToSentryDashboardWidgetQueryOutput() SentryDashboardWidgetQueryOutput
	ToSentryDashboardWidgetQueryOutputWithContext(context.Context) SentryDashboardWidgetQueryOutput
}

type SentryDashboardWidgetQueryArgs struct {
	Aggregates   pulumi.StringArrayInput `pulumi:"aggregates"`
	Columns      pulumi.StringArrayInput `pulumi:"columns"`
	Conditions   pulumi.StringPtrInput   `pulumi:"conditions"`
	FieldAliases pulumi.StringArrayInput `pulumi:"fieldAliases"`
	Fields       pulumi.StringArrayInput `pulumi:"fields"`
	// The ID of this resource.
	Id      pulumi.StringPtrInput `pulumi:"id"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
	OrderBy pulumi.StringPtrInput `pulumi:"orderBy"`
}

func (SentryDashboardWidgetQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryDashboardWidgetQuery)(nil)).Elem()
}

func (i SentryDashboardWidgetQueryArgs) ToSentryDashboardWidgetQueryOutput() SentryDashboardWidgetQueryOutput {
	return i.ToSentryDashboardWidgetQueryOutputWithContext(context.Background())
}

func (i SentryDashboardWidgetQueryArgs) ToSentryDashboardWidgetQueryOutputWithContext(ctx context.Context) SentryDashboardWidgetQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryDashboardWidgetQueryOutput)
}

// SentryDashboardWidgetQueryArrayInput is an input type that accepts SentryDashboardWidgetQueryArray and SentryDashboardWidgetQueryArrayOutput values.
// You can construct a concrete instance of `SentryDashboardWidgetQueryArrayInput` via:
//
//	SentryDashboardWidgetQueryArray{ SentryDashboardWidgetQueryArgs{...} }
type SentryDashboardWidgetQueryArrayInput interface {
	pulumi.Input

	ToSentryDashboardWidgetQueryArrayOutput() SentryDashboardWidgetQueryArrayOutput
	ToSentryDashboardWidgetQueryArrayOutputWithContext(context.Context) SentryDashboardWidgetQueryArrayOutput
}

type SentryDashboardWidgetQueryArray []SentryDashboardWidgetQueryInput

func (SentryDashboardWidgetQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentryDashboardWidgetQuery)(nil)).Elem()
}

func (i SentryDashboardWidgetQueryArray) ToSentryDashboardWidgetQueryArrayOutput() SentryDashboardWidgetQueryArrayOutput {
	return i.ToSentryDashboardWidgetQueryArrayOutputWithContext(context.Background())
}

func (i SentryDashboardWidgetQueryArray) ToSentryDashboardWidgetQueryArrayOutputWithContext(ctx context.Context) SentryDashboardWidgetQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryDashboardWidgetQueryArrayOutput)
}

type SentryDashboardWidgetQueryOutput struct{ *pulumi.OutputState }

func (SentryDashboardWidgetQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryDashboardWidgetQuery)(nil)).Elem()
}

func (o SentryDashboardWidgetQueryOutput) ToSentryDashboardWidgetQueryOutput() SentryDashboardWidgetQueryOutput {
	return o
}

func (o SentryDashboardWidgetQueryOutput) ToSentryDashboardWidgetQueryOutputWithContext(ctx context.Context) SentryDashboardWidgetQueryOutput {
	return o
}

func (o SentryDashboardWidgetQueryOutput) Aggregates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SentryDashboardWidgetQuery) []string { return v.Aggregates }).(pulumi.StringArrayOutput)
}

func (o SentryDashboardWidgetQueryOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SentryDashboardWidgetQuery) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

func (o SentryDashboardWidgetQueryOutput) Conditions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryDashboardWidgetQuery) *string { return v.Conditions }).(pulumi.StringPtrOutput)
}

func (o SentryDashboardWidgetQueryOutput) FieldAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SentryDashboardWidgetQuery) []string { return v.FieldAliases }).(pulumi.StringArrayOutput)
}

func (o SentryDashboardWidgetQueryOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SentryDashboardWidgetQuery) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

// The ID of this resource.
func (o SentryDashboardWidgetQueryOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryDashboardWidgetQuery) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SentryDashboardWidgetQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryDashboardWidgetQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SentryDashboardWidgetQueryOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryDashboardWidgetQuery) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

type SentryDashboardWidgetQueryArrayOutput struct{ *pulumi.OutputState }

func (SentryDashboardWidgetQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentryDashboardWidgetQuery)(nil)).Elem()
}

func (o SentryDashboardWidgetQueryArrayOutput) ToSentryDashboardWidgetQueryArrayOutput() SentryDashboardWidgetQueryArrayOutput {
	return o
}

func (o SentryDashboardWidgetQueryArrayOutput) ToSentryDashboardWidgetQueryArrayOutputWithContext(ctx context.Context) SentryDashboardWidgetQueryArrayOutput {
	return o
}

func (o SentryDashboardWidgetQueryArrayOutput) Index(i pulumi.IntInput) SentryDashboardWidgetQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SentryDashboardWidgetQuery {
		return vs[0].([]SentryDashboardWidgetQuery)[vs[1].(int)]
	}).(SentryDashboardWidgetQueryOutput)
}

type SentryMetricAlertTrigger struct {
	Actions        []SentryMetricAlertTriggerAction `pulumi:"actions"`
	AlertThreshold float64                          `pulumi:"alertThreshold"`
	// The ID of this resource.
	Id               *string  `pulumi:"id"`
	Label            string   `pulumi:"label"`
	ResolveThreshold *float64 `pulumi:"resolveThreshold"`
	ThresholdType    int      `pulumi:"thresholdType"`
}

// SentryMetricAlertTriggerInput is an input type that accepts SentryMetricAlertTriggerArgs and SentryMetricAlertTriggerOutput values.
// You can construct a concrete instance of `SentryMetricAlertTriggerInput` via:
//
//	SentryMetricAlertTriggerArgs{...}
type SentryMetricAlertTriggerInput interface {
	pulumi.Input

	ToSentryMetricAlertTriggerOutput() SentryMetricAlertTriggerOutput
	ToSentryMetricAlertTriggerOutputWithContext(context.Context) SentryMetricAlertTriggerOutput
}

type SentryMetricAlertTriggerArgs struct {
	Actions        SentryMetricAlertTriggerActionArrayInput `pulumi:"actions"`
	AlertThreshold pulumi.Float64Input                      `pulumi:"alertThreshold"`
	// The ID of this resource.
	Id               pulumi.StringPtrInput  `pulumi:"id"`
	Label            pulumi.StringInput     `pulumi:"label"`
	ResolveThreshold pulumi.Float64PtrInput `pulumi:"resolveThreshold"`
	ThresholdType    pulumi.IntInput        `pulumi:"thresholdType"`
}

func (SentryMetricAlertTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryMetricAlertTrigger)(nil)).Elem()
}

func (i SentryMetricAlertTriggerArgs) ToSentryMetricAlertTriggerOutput() SentryMetricAlertTriggerOutput {
	return i.ToSentryMetricAlertTriggerOutputWithContext(context.Background())
}

func (i SentryMetricAlertTriggerArgs) ToSentryMetricAlertTriggerOutputWithContext(ctx context.Context) SentryMetricAlertTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryMetricAlertTriggerOutput)
}

// SentryMetricAlertTriggerArrayInput is an input type that accepts SentryMetricAlertTriggerArray and SentryMetricAlertTriggerArrayOutput values.
// You can construct a concrete instance of `SentryMetricAlertTriggerArrayInput` via:
//
//	SentryMetricAlertTriggerArray{ SentryMetricAlertTriggerArgs{...} }
type SentryMetricAlertTriggerArrayInput interface {
	pulumi.Input

	ToSentryMetricAlertTriggerArrayOutput() SentryMetricAlertTriggerArrayOutput
	ToSentryMetricAlertTriggerArrayOutputWithContext(context.Context) SentryMetricAlertTriggerArrayOutput
}

type SentryMetricAlertTriggerArray []SentryMetricAlertTriggerInput

func (SentryMetricAlertTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentryMetricAlertTrigger)(nil)).Elem()
}

func (i SentryMetricAlertTriggerArray) ToSentryMetricAlertTriggerArrayOutput() SentryMetricAlertTriggerArrayOutput {
	return i.ToSentryMetricAlertTriggerArrayOutputWithContext(context.Background())
}

func (i SentryMetricAlertTriggerArray) ToSentryMetricAlertTriggerArrayOutputWithContext(ctx context.Context) SentryMetricAlertTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryMetricAlertTriggerArrayOutput)
}

type SentryMetricAlertTriggerOutput struct{ *pulumi.OutputState }

func (SentryMetricAlertTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryMetricAlertTrigger)(nil)).Elem()
}

func (o SentryMetricAlertTriggerOutput) ToSentryMetricAlertTriggerOutput() SentryMetricAlertTriggerOutput {
	return o
}

func (o SentryMetricAlertTriggerOutput) ToSentryMetricAlertTriggerOutputWithContext(ctx context.Context) SentryMetricAlertTriggerOutput {
	return o
}

func (o SentryMetricAlertTriggerOutput) Actions() SentryMetricAlertTriggerActionArrayOutput {
	return o.ApplyT(func(v SentryMetricAlertTrigger) []SentryMetricAlertTriggerAction { return v.Actions }).(SentryMetricAlertTriggerActionArrayOutput)
}

func (o SentryMetricAlertTriggerOutput) AlertThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v SentryMetricAlertTrigger) float64 { return v.AlertThreshold }).(pulumi.Float64Output)
}

// The ID of this resource.
func (o SentryMetricAlertTriggerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryMetricAlertTrigger) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SentryMetricAlertTriggerOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v SentryMetricAlertTrigger) string { return v.Label }).(pulumi.StringOutput)
}

func (o SentryMetricAlertTriggerOutput) ResolveThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SentryMetricAlertTrigger) *float64 { return v.ResolveThreshold }).(pulumi.Float64PtrOutput)
}

func (o SentryMetricAlertTriggerOutput) ThresholdType() pulumi.IntOutput {
	return o.ApplyT(func(v SentryMetricAlertTrigger) int { return v.ThresholdType }).(pulumi.IntOutput)
}

type SentryMetricAlertTriggerArrayOutput struct{ *pulumi.OutputState }

func (SentryMetricAlertTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentryMetricAlertTrigger)(nil)).Elem()
}

func (o SentryMetricAlertTriggerArrayOutput) ToSentryMetricAlertTriggerArrayOutput() SentryMetricAlertTriggerArrayOutput {
	return o
}

func (o SentryMetricAlertTriggerArrayOutput) ToSentryMetricAlertTriggerArrayOutputWithContext(ctx context.Context) SentryMetricAlertTriggerArrayOutput {
	return o
}

func (o SentryMetricAlertTriggerArrayOutput) Index(i pulumi.IntInput) SentryMetricAlertTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SentryMetricAlertTrigger {
		return vs[0].([]SentryMetricAlertTrigger)[vs[1].(int)]
	}).(SentryMetricAlertTriggerOutput)
}

type SentryMetricAlertTriggerAction struct {
	// The ID of this resource.
	Id               *string `pulumi:"id"`
	IntegrationId    *int    `pulumi:"integrationId"`
	TargetIdentifier *string `pulumi:"targetIdentifier"`
	TargetType       string  `pulumi:"targetType"`
	Type             string  `pulumi:"type"`
}

// SentryMetricAlertTriggerActionInput is an input type that accepts SentryMetricAlertTriggerActionArgs and SentryMetricAlertTriggerActionOutput values.
// You can construct a concrete instance of `SentryMetricAlertTriggerActionInput` via:
//
//	SentryMetricAlertTriggerActionArgs{...}
type SentryMetricAlertTriggerActionInput interface {
	pulumi.Input

	ToSentryMetricAlertTriggerActionOutput() SentryMetricAlertTriggerActionOutput
	ToSentryMetricAlertTriggerActionOutputWithContext(context.Context) SentryMetricAlertTriggerActionOutput
}

type SentryMetricAlertTriggerActionArgs struct {
	// The ID of this resource.
	Id               pulumi.StringPtrInput `pulumi:"id"`
	IntegrationId    pulumi.IntPtrInput    `pulumi:"integrationId"`
	TargetIdentifier pulumi.StringPtrInput `pulumi:"targetIdentifier"`
	TargetType       pulumi.StringInput    `pulumi:"targetType"`
	Type             pulumi.StringInput    `pulumi:"type"`
}

func (SentryMetricAlertTriggerActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryMetricAlertTriggerAction)(nil)).Elem()
}

func (i SentryMetricAlertTriggerActionArgs) ToSentryMetricAlertTriggerActionOutput() SentryMetricAlertTriggerActionOutput {
	return i.ToSentryMetricAlertTriggerActionOutputWithContext(context.Background())
}

func (i SentryMetricAlertTriggerActionArgs) ToSentryMetricAlertTriggerActionOutputWithContext(ctx context.Context) SentryMetricAlertTriggerActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryMetricAlertTriggerActionOutput)
}

// SentryMetricAlertTriggerActionArrayInput is an input type that accepts SentryMetricAlertTriggerActionArray and SentryMetricAlertTriggerActionArrayOutput values.
// You can construct a concrete instance of `SentryMetricAlertTriggerActionArrayInput` via:
//
//	SentryMetricAlertTriggerActionArray{ SentryMetricAlertTriggerActionArgs{...} }
type SentryMetricAlertTriggerActionArrayInput interface {
	pulumi.Input

	ToSentryMetricAlertTriggerActionArrayOutput() SentryMetricAlertTriggerActionArrayOutput
	ToSentryMetricAlertTriggerActionArrayOutputWithContext(context.Context) SentryMetricAlertTriggerActionArrayOutput
}

type SentryMetricAlertTriggerActionArray []SentryMetricAlertTriggerActionInput

func (SentryMetricAlertTriggerActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentryMetricAlertTriggerAction)(nil)).Elem()
}

func (i SentryMetricAlertTriggerActionArray) ToSentryMetricAlertTriggerActionArrayOutput() SentryMetricAlertTriggerActionArrayOutput {
	return i.ToSentryMetricAlertTriggerActionArrayOutputWithContext(context.Background())
}

func (i SentryMetricAlertTriggerActionArray) ToSentryMetricAlertTriggerActionArrayOutputWithContext(ctx context.Context) SentryMetricAlertTriggerActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryMetricAlertTriggerActionArrayOutput)
}

type SentryMetricAlertTriggerActionOutput struct{ *pulumi.OutputState }

func (SentryMetricAlertTriggerActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SentryMetricAlertTriggerAction)(nil)).Elem()
}

func (o SentryMetricAlertTriggerActionOutput) ToSentryMetricAlertTriggerActionOutput() SentryMetricAlertTriggerActionOutput {
	return o
}

func (o SentryMetricAlertTriggerActionOutput) ToSentryMetricAlertTriggerActionOutputWithContext(ctx context.Context) SentryMetricAlertTriggerActionOutput {
	return o
}

// The ID of this resource.
func (o SentryMetricAlertTriggerActionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryMetricAlertTriggerAction) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o SentryMetricAlertTriggerActionOutput) IntegrationId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SentryMetricAlertTriggerAction) *int { return v.IntegrationId }).(pulumi.IntPtrOutput)
}

func (o SentryMetricAlertTriggerActionOutput) TargetIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SentryMetricAlertTriggerAction) *string { return v.TargetIdentifier }).(pulumi.StringPtrOutput)
}

func (o SentryMetricAlertTriggerActionOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v SentryMetricAlertTriggerAction) string { return v.TargetType }).(pulumi.StringOutput)
}

func (o SentryMetricAlertTriggerActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SentryMetricAlertTriggerAction) string { return v.Type }).(pulumi.StringOutput)
}

type SentryMetricAlertTriggerActionArrayOutput struct{ *pulumi.OutputState }

func (SentryMetricAlertTriggerActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SentryMetricAlertTriggerAction)(nil)).Elem()
}

func (o SentryMetricAlertTriggerActionArrayOutput) ToSentryMetricAlertTriggerActionArrayOutput() SentryMetricAlertTriggerActionArrayOutput {
	return o
}

func (o SentryMetricAlertTriggerActionArrayOutput) ToSentryMetricAlertTriggerActionArrayOutputWithContext(ctx context.Context) SentryMetricAlertTriggerActionArrayOutput {
	return o
}

func (o SentryMetricAlertTriggerActionArrayOutput) Index(i pulumi.IntInput) SentryMetricAlertTriggerActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SentryMetricAlertTriggerAction {
		return vs[0].([]SentryMetricAlertTriggerAction)[vs[1].(int)]
	}).(SentryMetricAlertTriggerActionOutput)
}

type GetSentryDashboardWidget struct {
	DisplayType string                           `pulumi:"displayType"`
	Id          string                           `pulumi:"id"`
	Interval    string                           `pulumi:"interval"`
	Layouts     []GetSentryDashboardWidgetLayout `pulumi:"layouts"`
	Limit       int                              `pulumi:"limit"`
	Queries     []GetSentryDashboardWidgetQuery  `pulumi:"queries"`
	Title       string                           `pulumi:"title"`
	WidgetType  string                           `pulumi:"widgetType"`
}

// GetSentryDashboardWidgetInput is an input type that accepts GetSentryDashboardWidgetArgs and GetSentryDashboardWidgetOutput values.
// You can construct a concrete instance of `GetSentryDashboardWidgetInput` via:
//
//	GetSentryDashboardWidgetArgs{...}
type GetSentryDashboardWidgetInput interface {
	pulumi.Input

	ToGetSentryDashboardWidgetOutput() GetSentryDashboardWidgetOutput
	ToGetSentryDashboardWidgetOutputWithContext(context.Context) GetSentryDashboardWidgetOutput
}

type GetSentryDashboardWidgetArgs struct {
	DisplayType pulumi.StringInput                       `pulumi:"displayType"`
	Id          pulumi.StringInput                       `pulumi:"id"`
	Interval    pulumi.StringInput                       `pulumi:"interval"`
	Layouts     GetSentryDashboardWidgetLayoutArrayInput `pulumi:"layouts"`
	Limit       pulumi.IntInput                          `pulumi:"limit"`
	Queries     GetSentryDashboardWidgetQueryArrayInput  `pulumi:"queries"`
	Title       pulumi.StringInput                       `pulumi:"title"`
	WidgetType  pulumi.StringInput                       `pulumi:"widgetType"`
}

func (GetSentryDashboardWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryDashboardWidget)(nil)).Elem()
}

func (i GetSentryDashboardWidgetArgs) ToGetSentryDashboardWidgetOutput() GetSentryDashboardWidgetOutput {
	return i.ToGetSentryDashboardWidgetOutputWithContext(context.Background())
}

func (i GetSentryDashboardWidgetArgs) ToGetSentryDashboardWidgetOutputWithContext(ctx context.Context) GetSentryDashboardWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryDashboardWidgetOutput)
}

// GetSentryDashboardWidgetArrayInput is an input type that accepts GetSentryDashboardWidgetArray and GetSentryDashboardWidgetArrayOutput values.
// You can construct a concrete instance of `GetSentryDashboardWidgetArrayInput` via:
//
//	GetSentryDashboardWidgetArray{ GetSentryDashboardWidgetArgs{...} }
type GetSentryDashboardWidgetArrayInput interface {
	pulumi.Input

	ToGetSentryDashboardWidgetArrayOutput() GetSentryDashboardWidgetArrayOutput
	ToGetSentryDashboardWidgetArrayOutputWithContext(context.Context) GetSentryDashboardWidgetArrayOutput
}

type GetSentryDashboardWidgetArray []GetSentryDashboardWidgetInput

func (GetSentryDashboardWidgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryDashboardWidget)(nil)).Elem()
}

func (i GetSentryDashboardWidgetArray) ToGetSentryDashboardWidgetArrayOutput() GetSentryDashboardWidgetArrayOutput {
	return i.ToGetSentryDashboardWidgetArrayOutputWithContext(context.Background())
}

func (i GetSentryDashboardWidgetArray) ToGetSentryDashboardWidgetArrayOutputWithContext(ctx context.Context) GetSentryDashboardWidgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryDashboardWidgetArrayOutput)
}

type GetSentryDashboardWidgetOutput struct{ *pulumi.OutputState }

func (GetSentryDashboardWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryDashboardWidget)(nil)).Elem()
}

func (o GetSentryDashboardWidgetOutput) ToGetSentryDashboardWidgetOutput() GetSentryDashboardWidgetOutput {
	return o
}

func (o GetSentryDashboardWidgetOutput) ToGetSentryDashboardWidgetOutputWithContext(ctx context.Context) GetSentryDashboardWidgetOutput {
	return o
}

func (o GetSentryDashboardWidgetOutput) DisplayType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidget) string { return v.DisplayType }).(pulumi.StringOutput)
}

func (o GetSentryDashboardWidgetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidget) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSentryDashboardWidgetOutput) Interval() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidget) string { return v.Interval }).(pulumi.StringOutput)
}

func (o GetSentryDashboardWidgetOutput) Layouts() GetSentryDashboardWidgetLayoutArrayOutput {
	return o.ApplyT(func(v GetSentryDashboardWidget) []GetSentryDashboardWidgetLayout { return v.Layouts }).(GetSentryDashboardWidgetLayoutArrayOutput)
}

func (o GetSentryDashboardWidgetOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetSentryDashboardWidget) int { return v.Limit }).(pulumi.IntOutput)
}

func (o GetSentryDashboardWidgetOutput) Queries() GetSentryDashboardWidgetQueryArrayOutput {
	return o.ApplyT(func(v GetSentryDashboardWidget) []GetSentryDashboardWidgetQuery { return v.Queries }).(GetSentryDashboardWidgetQueryArrayOutput)
}

func (o GetSentryDashboardWidgetOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidget) string { return v.Title }).(pulumi.StringOutput)
}

func (o GetSentryDashboardWidgetOutput) WidgetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidget) string { return v.WidgetType }).(pulumi.StringOutput)
}

type GetSentryDashboardWidgetArrayOutput struct{ *pulumi.OutputState }

func (GetSentryDashboardWidgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryDashboardWidget)(nil)).Elem()
}

func (o GetSentryDashboardWidgetArrayOutput) ToGetSentryDashboardWidgetArrayOutput() GetSentryDashboardWidgetArrayOutput {
	return o
}

func (o GetSentryDashboardWidgetArrayOutput) ToGetSentryDashboardWidgetArrayOutputWithContext(ctx context.Context) GetSentryDashboardWidgetArrayOutput {
	return o
}

func (o GetSentryDashboardWidgetArrayOutput) Index(i pulumi.IntInput) GetSentryDashboardWidgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSentryDashboardWidget {
		return vs[0].([]GetSentryDashboardWidget)[vs[1].(int)]
	}).(GetSentryDashboardWidgetOutput)
}

type GetSentryDashboardWidgetLayout struct {
	H    int `pulumi:"h"`
	MinH int `pulumi:"minH"`
	W    int `pulumi:"w"`
	X    int `pulumi:"x"`
	Y    int `pulumi:"y"`
}

// GetSentryDashboardWidgetLayoutInput is an input type that accepts GetSentryDashboardWidgetLayoutArgs and GetSentryDashboardWidgetLayoutOutput values.
// You can construct a concrete instance of `GetSentryDashboardWidgetLayoutInput` via:
//
//	GetSentryDashboardWidgetLayoutArgs{...}
type GetSentryDashboardWidgetLayoutInput interface {
	pulumi.Input

	ToGetSentryDashboardWidgetLayoutOutput() GetSentryDashboardWidgetLayoutOutput
	ToGetSentryDashboardWidgetLayoutOutputWithContext(context.Context) GetSentryDashboardWidgetLayoutOutput
}

type GetSentryDashboardWidgetLayoutArgs struct {
	H    pulumi.IntInput `pulumi:"h"`
	MinH pulumi.IntInput `pulumi:"minH"`
	W    pulumi.IntInput `pulumi:"w"`
	X    pulumi.IntInput `pulumi:"x"`
	Y    pulumi.IntInput `pulumi:"y"`
}

func (GetSentryDashboardWidgetLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryDashboardWidgetLayout)(nil)).Elem()
}

func (i GetSentryDashboardWidgetLayoutArgs) ToGetSentryDashboardWidgetLayoutOutput() GetSentryDashboardWidgetLayoutOutput {
	return i.ToGetSentryDashboardWidgetLayoutOutputWithContext(context.Background())
}

func (i GetSentryDashboardWidgetLayoutArgs) ToGetSentryDashboardWidgetLayoutOutputWithContext(ctx context.Context) GetSentryDashboardWidgetLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryDashboardWidgetLayoutOutput)
}

// GetSentryDashboardWidgetLayoutArrayInput is an input type that accepts GetSentryDashboardWidgetLayoutArray and GetSentryDashboardWidgetLayoutArrayOutput values.
// You can construct a concrete instance of `GetSentryDashboardWidgetLayoutArrayInput` via:
//
//	GetSentryDashboardWidgetLayoutArray{ GetSentryDashboardWidgetLayoutArgs{...} }
type GetSentryDashboardWidgetLayoutArrayInput interface {
	pulumi.Input

	ToGetSentryDashboardWidgetLayoutArrayOutput() GetSentryDashboardWidgetLayoutArrayOutput
	ToGetSentryDashboardWidgetLayoutArrayOutputWithContext(context.Context) GetSentryDashboardWidgetLayoutArrayOutput
}

type GetSentryDashboardWidgetLayoutArray []GetSentryDashboardWidgetLayoutInput

func (GetSentryDashboardWidgetLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryDashboardWidgetLayout)(nil)).Elem()
}

func (i GetSentryDashboardWidgetLayoutArray) ToGetSentryDashboardWidgetLayoutArrayOutput() GetSentryDashboardWidgetLayoutArrayOutput {
	return i.ToGetSentryDashboardWidgetLayoutArrayOutputWithContext(context.Background())
}

func (i GetSentryDashboardWidgetLayoutArray) ToGetSentryDashboardWidgetLayoutArrayOutputWithContext(ctx context.Context) GetSentryDashboardWidgetLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryDashboardWidgetLayoutArrayOutput)
}

type GetSentryDashboardWidgetLayoutOutput struct{ *pulumi.OutputState }

func (GetSentryDashboardWidgetLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryDashboardWidgetLayout)(nil)).Elem()
}

func (o GetSentryDashboardWidgetLayoutOutput) ToGetSentryDashboardWidgetLayoutOutput() GetSentryDashboardWidgetLayoutOutput {
	return o
}

func (o GetSentryDashboardWidgetLayoutOutput) ToGetSentryDashboardWidgetLayoutOutputWithContext(ctx context.Context) GetSentryDashboardWidgetLayoutOutput {
	return o
}

func (o GetSentryDashboardWidgetLayoutOutput) H() pulumi.IntOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetLayout) int { return v.H }).(pulumi.IntOutput)
}

func (o GetSentryDashboardWidgetLayoutOutput) MinH() pulumi.IntOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetLayout) int { return v.MinH }).(pulumi.IntOutput)
}

func (o GetSentryDashboardWidgetLayoutOutput) W() pulumi.IntOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetLayout) int { return v.W }).(pulumi.IntOutput)
}

func (o GetSentryDashboardWidgetLayoutOutput) X() pulumi.IntOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetLayout) int { return v.X }).(pulumi.IntOutput)
}

func (o GetSentryDashboardWidgetLayoutOutput) Y() pulumi.IntOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetLayout) int { return v.Y }).(pulumi.IntOutput)
}

type GetSentryDashboardWidgetLayoutArrayOutput struct{ *pulumi.OutputState }

func (GetSentryDashboardWidgetLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryDashboardWidgetLayout)(nil)).Elem()
}

func (o GetSentryDashboardWidgetLayoutArrayOutput) ToGetSentryDashboardWidgetLayoutArrayOutput() GetSentryDashboardWidgetLayoutArrayOutput {
	return o
}

func (o GetSentryDashboardWidgetLayoutArrayOutput) ToGetSentryDashboardWidgetLayoutArrayOutputWithContext(ctx context.Context) GetSentryDashboardWidgetLayoutArrayOutput {
	return o
}

func (o GetSentryDashboardWidgetLayoutArrayOutput) Index(i pulumi.IntInput) GetSentryDashboardWidgetLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSentryDashboardWidgetLayout {
		return vs[0].([]GetSentryDashboardWidgetLayout)[vs[1].(int)]
	}).(GetSentryDashboardWidgetLayoutOutput)
}

type GetSentryDashboardWidgetQuery struct {
	Aggregates   []string `pulumi:"aggregates"`
	Columns      []string `pulumi:"columns"`
	Conditions   string   `pulumi:"conditions"`
	FieldAliases []string `pulumi:"fieldAliases"`
	Fields       []string `pulumi:"fields"`
	Id           string   `pulumi:"id"`
	Name         string   `pulumi:"name"`
	OrderBy      string   `pulumi:"orderBy"`
}

// GetSentryDashboardWidgetQueryInput is an input type that accepts GetSentryDashboardWidgetQueryArgs and GetSentryDashboardWidgetQueryOutput values.
// You can construct a concrete instance of `GetSentryDashboardWidgetQueryInput` via:
//
//	GetSentryDashboardWidgetQueryArgs{...}
type GetSentryDashboardWidgetQueryInput interface {
	pulumi.Input

	ToGetSentryDashboardWidgetQueryOutput() GetSentryDashboardWidgetQueryOutput
	ToGetSentryDashboardWidgetQueryOutputWithContext(context.Context) GetSentryDashboardWidgetQueryOutput
}

type GetSentryDashboardWidgetQueryArgs struct {
	Aggregates   pulumi.StringArrayInput `pulumi:"aggregates"`
	Columns      pulumi.StringArrayInput `pulumi:"columns"`
	Conditions   pulumi.StringInput      `pulumi:"conditions"`
	FieldAliases pulumi.StringArrayInput `pulumi:"fieldAliases"`
	Fields       pulumi.StringArrayInput `pulumi:"fields"`
	Id           pulumi.StringInput      `pulumi:"id"`
	Name         pulumi.StringInput      `pulumi:"name"`
	OrderBy      pulumi.StringInput      `pulumi:"orderBy"`
}

func (GetSentryDashboardWidgetQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryDashboardWidgetQuery)(nil)).Elem()
}

func (i GetSentryDashboardWidgetQueryArgs) ToGetSentryDashboardWidgetQueryOutput() GetSentryDashboardWidgetQueryOutput {
	return i.ToGetSentryDashboardWidgetQueryOutputWithContext(context.Background())
}

func (i GetSentryDashboardWidgetQueryArgs) ToGetSentryDashboardWidgetQueryOutputWithContext(ctx context.Context) GetSentryDashboardWidgetQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryDashboardWidgetQueryOutput)
}

// GetSentryDashboardWidgetQueryArrayInput is an input type that accepts GetSentryDashboardWidgetQueryArray and GetSentryDashboardWidgetQueryArrayOutput values.
// You can construct a concrete instance of `GetSentryDashboardWidgetQueryArrayInput` via:
//
//	GetSentryDashboardWidgetQueryArray{ GetSentryDashboardWidgetQueryArgs{...} }
type GetSentryDashboardWidgetQueryArrayInput interface {
	pulumi.Input

	ToGetSentryDashboardWidgetQueryArrayOutput() GetSentryDashboardWidgetQueryArrayOutput
	ToGetSentryDashboardWidgetQueryArrayOutputWithContext(context.Context) GetSentryDashboardWidgetQueryArrayOutput
}

type GetSentryDashboardWidgetQueryArray []GetSentryDashboardWidgetQueryInput

func (GetSentryDashboardWidgetQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryDashboardWidgetQuery)(nil)).Elem()
}

func (i GetSentryDashboardWidgetQueryArray) ToGetSentryDashboardWidgetQueryArrayOutput() GetSentryDashboardWidgetQueryArrayOutput {
	return i.ToGetSentryDashboardWidgetQueryArrayOutputWithContext(context.Background())
}

func (i GetSentryDashboardWidgetQueryArray) ToGetSentryDashboardWidgetQueryArrayOutputWithContext(ctx context.Context) GetSentryDashboardWidgetQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryDashboardWidgetQueryArrayOutput)
}

type GetSentryDashboardWidgetQueryOutput struct{ *pulumi.OutputState }

func (GetSentryDashboardWidgetQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryDashboardWidgetQuery)(nil)).Elem()
}

func (o GetSentryDashboardWidgetQueryOutput) ToGetSentryDashboardWidgetQueryOutput() GetSentryDashboardWidgetQueryOutput {
	return o
}

func (o GetSentryDashboardWidgetQueryOutput) ToGetSentryDashboardWidgetQueryOutputWithContext(ctx context.Context) GetSentryDashboardWidgetQueryOutput {
	return o
}

func (o GetSentryDashboardWidgetQueryOutput) Aggregates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetQuery) []string { return v.Aggregates }).(pulumi.StringArrayOutput)
}

func (o GetSentryDashboardWidgetQueryOutput) Columns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetQuery) []string { return v.Columns }).(pulumi.StringArrayOutput)
}

func (o GetSentryDashboardWidgetQueryOutput) Conditions() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetQuery) string { return v.Conditions }).(pulumi.StringOutput)
}

func (o GetSentryDashboardWidgetQueryOutput) FieldAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetQuery) []string { return v.FieldAliases }).(pulumi.StringArrayOutput)
}

func (o GetSentryDashboardWidgetQueryOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetQuery) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

func (o GetSentryDashboardWidgetQueryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetQuery) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSentryDashboardWidgetQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetQuery) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSentryDashboardWidgetQueryOutput) OrderBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryDashboardWidgetQuery) string { return v.OrderBy }).(pulumi.StringOutput)
}

type GetSentryDashboardWidgetQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSentryDashboardWidgetQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryDashboardWidgetQuery)(nil)).Elem()
}

func (o GetSentryDashboardWidgetQueryArrayOutput) ToGetSentryDashboardWidgetQueryArrayOutput() GetSentryDashboardWidgetQueryArrayOutput {
	return o
}

func (o GetSentryDashboardWidgetQueryArrayOutput) ToGetSentryDashboardWidgetQueryArrayOutputWithContext(ctx context.Context) GetSentryDashboardWidgetQueryArrayOutput {
	return o
}

func (o GetSentryDashboardWidgetQueryArrayOutput) Index(i pulumi.IntInput) GetSentryDashboardWidgetQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSentryDashboardWidgetQuery {
		return vs[0].([]GetSentryDashboardWidgetQuery)[vs[1].(int)]
	}).(GetSentryDashboardWidgetQueryOutput)
}

type GetSentryMetricAlertTrigger struct {
	Actions          []GetSentryMetricAlertTriggerAction `pulumi:"actions"`
	AlertThreshold   float64                             `pulumi:"alertThreshold"`
	Id               string                              `pulumi:"id"`
	Label            string                              `pulumi:"label"`
	ResolveThreshold float64                             `pulumi:"resolveThreshold"`
	ThresholdType    int                                 `pulumi:"thresholdType"`
}

// GetSentryMetricAlertTriggerInput is an input type that accepts GetSentryMetricAlertTriggerArgs and GetSentryMetricAlertTriggerOutput values.
// You can construct a concrete instance of `GetSentryMetricAlertTriggerInput` via:
//
//	GetSentryMetricAlertTriggerArgs{...}
type GetSentryMetricAlertTriggerInput interface {
	pulumi.Input

	ToGetSentryMetricAlertTriggerOutput() GetSentryMetricAlertTriggerOutput
	ToGetSentryMetricAlertTriggerOutputWithContext(context.Context) GetSentryMetricAlertTriggerOutput
}

type GetSentryMetricAlertTriggerArgs struct {
	Actions          GetSentryMetricAlertTriggerActionArrayInput `pulumi:"actions"`
	AlertThreshold   pulumi.Float64Input                         `pulumi:"alertThreshold"`
	Id               pulumi.StringInput                          `pulumi:"id"`
	Label            pulumi.StringInput                          `pulumi:"label"`
	ResolveThreshold pulumi.Float64Input                         `pulumi:"resolveThreshold"`
	ThresholdType    pulumi.IntInput                             `pulumi:"thresholdType"`
}

func (GetSentryMetricAlertTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryMetricAlertTrigger)(nil)).Elem()
}

func (i GetSentryMetricAlertTriggerArgs) ToGetSentryMetricAlertTriggerOutput() GetSentryMetricAlertTriggerOutput {
	return i.ToGetSentryMetricAlertTriggerOutputWithContext(context.Background())
}

func (i GetSentryMetricAlertTriggerArgs) ToGetSentryMetricAlertTriggerOutputWithContext(ctx context.Context) GetSentryMetricAlertTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryMetricAlertTriggerOutput)
}

// GetSentryMetricAlertTriggerArrayInput is an input type that accepts GetSentryMetricAlertTriggerArray and GetSentryMetricAlertTriggerArrayOutput values.
// You can construct a concrete instance of `GetSentryMetricAlertTriggerArrayInput` via:
//
//	GetSentryMetricAlertTriggerArray{ GetSentryMetricAlertTriggerArgs{...} }
type GetSentryMetricAlertTriggerArrayInput interface {
	pulumi.Input

	ToGetSentryMetricAlertTriggerArrayOutput() GetSentryMetricAlertTriggerArrayOutput
	ToGetSentryMetricAlertTriggerArrayOutputWithContext(context.Context) GetSentryMetricAlertTriggerArrayOutput
}

type GetSentryMetricAlertTriggerArray []GetSentryMetricAlertTriggerInput

func (GetSentryMetricAlertTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryMetricAlertTrigger)(nil)).Elem()
}

func (i GetSentryMetricAlertTriggerArray) ToGetSentryMetricAlertTriggerArrayOutput() GetSentryMetricAlertTriggerArrayOutput {
	return i.ToGetSentryMetricAlertTriggerArrayOutputWithContext(context.Background())
}

func (i GetSentryMetricAlertTriggerArray) ToGetSentryMetricAlertTriggerArrayOutputWithContext(ctx context.Context) GetSentryMetricAlertTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryMetricAlertTriggerArrayOutput)
}

type GetSentryMetricAlertTriggerOutput struct{ *pulumi.OutputState }

func (GetSentryMetricAlertTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryMetricAlertTrigger)(nil)).Elem()
}

func (o GetSentryMetricAlertTriggerOutput) ToGetSentryMetricAlertTriggerOutput() GetSentryMetricAlertTriggerOutput {
	return o
}

func (o GetSentryMetricAlertTriggerOutput) ToGetSentryMetricAlertTriggerOutputWithContext(ctx context.Context) GetSentryMetricAlertTriggerOutput {
	return o
}

func (o GetSentryMetricAlertTriggerOutput) Actions() GetSentryMetricAlertTriggerActionArrayOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTrigger) []GetSentryMetricAlertTriggerAction { return v.Actions }).(GetSentryMetricAlertTriggerActionArrayOutput)
}

func (o GetSentryMetricAlertTriggerOutput) AlertThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetSentryMetricAlertTrigger) float64 { return v.AlertThreshold }).(pulumi.Float64Output)
}

func (o GetSentryMetricAlertTriggerOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTrigger) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSentryMetricAlertTriggerOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTrigger) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetSentryMetricAlertTriggerOutput) ResolveThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v GetSentryMetricAlertTrigger) float64 { return v.ResolveThreshold }).(pulumi.Float64Output)
}

func (o GetSentryMetricAlertTriggerOutput) ThresholdType() pulumi.IntOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTrigger) int { return v.ThresholdType }).(pulumi.IntOutput)
}

type GetSentryMetricAlertTriggerArrayOutput struct{ *pulumi.OutputState }

func (GetSentryMetricAlertTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryMetricAlertTrigger)(nil)).Elem()
}

func (o GetSentryMetricAlertTriggerArrayOutput) ToGetSentryMetricAlertTriggerArrayOutput() GetSentryMetricAlertTriggerArrayOutput {
	return o
}

func (o GetSentryMetricAlertTriggerArrayOutput) ToGetSentryMetricAlertTriggerArrayOutputWithContext(ctx context.Context) GetSentryMetricAlertTriggerArrayOutput {
	return o
}

func (o GetSentryMetricAlertTriggerArrayOutput) Index(i pulumi.IntInput) GetSentryMetricAlertTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSentryMetricAlertTrigger {
		return vs[0].([]GetSentryMetricAlertTrigger)[vs[1].(int)]
	}).(GetSentryMetricAlertTriggerOutput)
}

type GetSentryMetricAlertTriggerAction struct {
	Id               string `pulumi:"id"`
	IntegrationId    int    `pulumi:"integrationId"`
	TargetIdentifier string `pulumi:"targetIdentifier"`
	TargetType       string `pulumi:"targetType"`
	Type             string `pulumi:"type"`
}

// GetSentryMetricAlertTriggerActionInput is an input type that accepts GetSentryMetricAlertTriggerActionArgs and GetSentryMetricAlertTriggerActionOutput values.
// You can construct a concrete instance of `GetSentryMetricAlertTriggerActionInput` via:
//
//	GetSentryMetricAlertTriggerActionArgs{...}
type GetSentryMetricAlertTriggerActionInput interface {
	pulumi.Input

	ToGetSentryMetricAlertTriggerActionOutput() GetSentryMetricAlertTriggerActionOutput
	ToGetSentryMetricAlertTriggerActionOutputWithContext(context.Context) GetSentryMetricAlertTriggerActionOutput
}

type GetSentryMetricAlertTriggerActionArgs struct {
	Id               pulumi.StringInput `pulumi:"id"`
	IntegrationId    pulumi.IntInput    `pulumi:"integrationId"`
	TargetIdentifier pulumi.StringInput `pulumi:"targetIdentifier"`
	TargetType       pulumi.StringInput `pulumi:"targetType"`
	Type             pulumi.StringInput `pulumi:"type"`
}

func (GetSentryMetricAlertTriggerActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryMetricAlertTriggerAction)(nil)).Elem()
}

func (i GetSentryMetricAlertTriggerActionArgs) ToGetSentryMetricAlertTriggerActionOutput() GetSentryMetricAlertTriggerActionOutput {
	return i.ToGetSentryMetricAlertTriggerActionOutputWithContext(context.Background())
}

func (i GetSentryMetricAlertTriggerActionArgs) ToGetSentryMetricAlertTriggerActionOutputWithContext(ctx context.Context) GetSentryMetricAlertTriggerActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryMetricAlertTriggerActionOutput)
}

// GetSentryMetricAlertTriggerActionArrayInput is an input type that accepts GetSentryMetricAlertTriggerActionArray and GetSentryMetricAlertTriggerActionArrayOutput values.
// You can construct a concrete instance of `GetSentryMetricAlertTriggerActionArrayInput` via:
//
//	GetSentryMetricAlertTriggerActionArray{ GetSentryMetricAlertTriggerActionArgs{...} }
type GetSentryMetricAlertTriggerActionArrayInput interface {
	pulumi.Input

	ToGetSentryMetricAlertTriggerActionArrayOutput() GetSentryMetricAlertTriggerActionArrayOutput
	ToGetSentryMetricAlertTriggerActionArrayOutputWithContext(context.Context) GetSentryMetricAlertTriggerActionArrayOutput
}

type GetSentryMetricAlertTriggerActionArray []GetSentryMetricAlertTriggerActionInput

func (GetSentryMetricAlertTriggerActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryMetricAlertTriggerAction)(nil)).Elem()
}

func (i GetSentryMetricAlertTriggerActionArray) ToGetSentryMetricAlertTriggerActionArrayOutput() GetSentryMetricAlertTriggerActionArrayOutput {
	return i.ToGetSentryMetricAlertTriggerActionArrayOutputWithContext(context.Background())
}

func (i GetSentryMetricAlertTriggerActionArray) ToGetSentryMetricAlertTriggerActionArrayOutputWithContext(ctx context.Context) GetSentryMetricAlertTriggerActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSentryMetricAlertTriggerActionArrayOutput)
}

type GetSentryMetricAlertTriggerActionOutput struct{ *pulumi.OutputState }

func (GetSentryMetricAlertTriggerActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSentryMetricAlertTriggerAction)(nil)).Elem()
}

func (o GetSentryMetricAlertTriggerActionOutput) ToGetSentryMetricAlertTriggerActionOutput() GetSentryMetricAlertTriggerActionOutput {
	return o
}

func (o GetSentryMetricAlertTriggerActionOutput) ToGetSentryMetricAlertTriggerActionOutputWithContext(ctx context.Context) GetSentryMetricAlertTriggerActionOutput {
	return o
}

func (o GetSentryMetricAlertTriggerActionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTriggerAction) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSentryMetricAlertTriggerActionOutput) IntegrationId() pulumi.IntOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTriggerAction) int { return v.IntegrationId }).(pulumi.IntOutput)
}

func (o GetSentryMetricAlertTriggerActionOutput) TargetIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTriggerAction) string { return v.TargetIdentifier }).(pulumi.StringOutput)
}

func (o GetSentryMetricAlertTriggerActionOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTriggerAction) string { return v.TargetType }).(pulumi.StringOutput)
}

func (o GetSentryMetricAlertTriggerActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSentryMetricAlertTriggerAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetSentryMetricAlertTriggerActionArrayOutput struct{ *pulumi.OutputState }

func (GetSentryMetricAlertTriggerActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSentryMetricAlertTriggerAction)(nil)).Elem()
}

func (o GetSentryMetricAlertTriggerActionArrayOutput) ToGetSentryMetricAlertTriggerActionArrayOutput() GetSentryMetricAlertTriggerActionArrayOutput {
	return o
}

func (o GetSentryMetricAlertTriggerActionArrayOutput) ToGetSentryMetricAlertTriggerActionArrayOutputWithContext(ctx context.Context) GetSentryMetricAlertTriggerActionArrayOutput {
	return o
}

func (o GetSentryMetricAlertTriggerActionArrayOutput) Index(i pulumi.IntInput) GetSentryMetricAlertTriggerActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSentryMetricAlertTriggerAction {
		return vs[0].([]GetSentryMetricAlertTriggerAction)[vs[1].(int)]
	}).(GetSentryMetricAlertTriggerActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SentryDashboardWidgetInput)(nil)).Elem(), SentryDashboardWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryDashboardWidgetArrayInput)(nil)).Elem(), SentryDashboardWidgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryDashboardWidgetLayoutInput)(nil)).Elem(), SentryDashboardWidgetLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryDashboardWidgetQueryInput)(nil)).Elem(), SentryDashboardWidgetQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryDashboardWidgetQueryArrayInput)(nil)).Elem(), SentryDashboardWidgetQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryMetricAlertTriggerInput)(nil)).Elem(), SentryMetricAlertTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryMetricAlertTriggerArrayInput)(nil)).Elem(), SentryMetricAlertTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryMetricAlertTriggerActionInput)(nil)).Elem(), SentryMetricAlertTriggerActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryMetricAlertTriggerActionArrayInput)(nil)).Elem(), SentryMetricAlertTriggerActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryDashboardWidgetInput)(nil)).Elem(), GetSentryDashboardWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryDashboardWidgetArrayInput)(nil)).Elem(), GetSentryDashboardWidgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryDashboardWidgetLayoutInput)(nil)).Elem(), GetSentryDashboardWidgetLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryDashboardWidgetLayoutArrayInput)(nil)).Elem(), GetSentryDashboardWidgetLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryDashboardWidgetQueryInput)(nil)).Elem(), GetSentryDashboardWidgetQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryDashboardWidgetQueryArrayInput)(nil)).Elem(), GetSentryDashboardWidgetQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryMetricAlertTriggerInput)(nil)).Elem(), GetSentryMetricAlertTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryMetricAlertTriggerArrayInput)(nil)).Elem(), GetSentryMetricAlertTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryMetricAlertTriggerActionInput)(nil)).Elem(), GetSentryMetricAlertTriggerActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSentryMetricAlertTriggerActionArrayInput)(nil)).Elem(), GetSentryMetricAlertTriggerActionArray{})
	pulumi.RegisterOutputType(SentryDashboardWidgetOutput{})
	pulumi.RegisterOutputType(SentryDashboardWidgetArrayOutput{})
	pulumi.RegisterOutputType(SentryDashboardWidgetLayoutOutput{})
	pulumi.RegisterOutputType(SentryDashboardWidgetQueryOutput{})
	pulumi.RegisterOutputType(SentryDashboardWidgetQueryArrayOutput{})
	pulumi.RegisterOutputType(SentryMetricAlertTriggerOutput{})
	pulumi.RegisterOutputType(SentryMetricAlertTriggerArrayOutput{})
	pulumi.RegisterOutputType(SentryMetricAlertTriggerActionOutput{})
	pulumi.RegisterOutputType(SentryMetricAlertTriggerActionArrayOutput{})
	pulumi.RegisterOutputType(GetSentryDashboardWidgetOutput{})
	pulumi.RegisterOutputType(GetSentryDashboardWidgetArrayOutput{})
	pulumi.RegisterOutputType(GetSentryDashboardWidgetLayoutOutput{})
	pulumi.RegisterOutputType(GetSentryDashboardWidgetLayoutArrayOutput{})
	pulumi.RegisterOutputType(GetSentryDashboardWidgetQueryOutput{})
	pulumi.RegisterOutputType(GetSentryDashboardWidgetQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSentryMetricAlertTriggerOutput{})
	pulumi.RegisterOutputType(GetSentryMetricAlertTriggerArrayOutput{})
	pulumi.RegisterOutputType(GetSentryMetricAlertTriggerActionOutput{})
	pulumi.RegisterOutputType(GetSentryMetricAlertTriggerActionArrayOutput{})
}
