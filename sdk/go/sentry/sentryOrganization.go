// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry/internal"
)

// Sentry Organization resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create an organization
//			_, err := sentry.NewSentryOrganization(ctx, "default", &sentry.SentryOrganizationArgs{
//				Name:       pulumi.String("My Organization"),
//				Slug:       pulumi.String("my-organization"),
//				AgreeTerms: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// import using the organization slug from the URL:
//
// https://sentry.io/organizations/[org-slug]/issues/
//
// ```sh
// $ pulumi import sentry:index/sentryOrganization:SentryOrganization default org-slug
// ```
type SentryOrganization struct {
	pulumi.CustomResourceState

	// You agree to the applicable terms of service and privacy policy.
	AgreeTerms pulumi.BoolOutput `pulumi:"agreeTerms"`
	// The internal ID for this organization.
	InternalId pulumi.StringOutput `pulumi:"internalId"`
	// The human readable name for the organization.
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique URL slug for this organization.
	Slug pulumi.StringOutput `pulumi:"slug"`
}

// NewSentryOrganization registers a new resource with the given unique name, arguments, and options.
func NewSentryOrganization(ctx *pulumi.Context,
	name string, args *SentryOrganizationArgs, opts ...pulumi.ResourceOption) (*SentryOrganization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgreeTerms == nil {
		return nil, errors.New("invalid value for required argument 'AgreeTerms'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SentryOrganization
	err := ctx.RegisterResource("sentry:index/sentryOrganization:SentryOrganization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSentryOrganization gets an existing SentryOrganization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSentryOrganization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SentryOrganizationState, opts ...pulumi.ResourceOption) (*SentryOrganization, error) {
	var resource SentryOrganization
	err := ctx.ReadResource("sentry:index/sentryOrganization:SentryOrganization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SentryOrganization resources.
type sentryOrganizationState struct {
	// You agree to the applicable terms of service and privacy policy.
	AgreeTerms *bool `pulumi:"agreeTerms"`
	// The internal ID for this organization.
	InternalId *string `pulumi:"internalId"`
	// The human readable name for the organization.
	Name *string `pulumi:"name"`
	// The unique URL slug for this organization.
	Slug *string `pulumi:"slug"`
}

type SentryOrganizationState struct {
	// You agree to the applicable terms of service and privacy policy.
	AgreeTerms pulumi.BoolPtrInput
	// The internal ID for this organization.
	InternalId pulumi.StringPtrInput
	// The human readable name for the organization.
	Name pulumi.StringPtrInput
	// The unique URL slug for this organization.
	Slug pulumi.StringPtrInput
}

func (SentryOrganizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*sentryOrganizationState)(nil)).Elem()
}

type sentryOrganizationArgs struct {
	// You agree to the applicable terms of service and privacy policy.
	AgreeTerms bool `pulumi:"agreeTerms"`
	// The human readable name for the organization.
	Name *string `pulumi:"name"`
	// The unique URL slug for this organization.
	Slug *string `pulumi:"slug"`
}

// The set of arguments for constructing a SentryOrganization resource.
type SentryOrganizationArgs struct {
	// You agree to the applicable terms of service and privacy policy.
	AgreeTerms pulumi.BoolInput
	// The human readable name for the organization.
	Name pulumi.StringPtrInput
	// The unique URL slug for this organization.
	Slug pulumi.StringPtrInput
}

func (SentryOrganizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sentryOrganizationArgs)(nil)).Elem()
}

type SentryOrganizationInput interface {
	pulumi.Input

	ToSentryOrganizationOutput() SentryOrganizationOutput
	ToSentryOrganizationOutputWithContext(ctx context.Context) SentryOrganizationOutput
}

func (*SentryOrganization) ElementType() reflect.Type {
	return reflect.TypeOf((**SentryOrganization)(nil)).Elem()
}

func (i *SentryOrganization) ToSentryOrganizationOutput() SentryOrganizationOutput {
	return i.ToSentryOrganizationOutputWithContext(context.Background())
}

func (i *SentryOrganization) ToSentryOrganizationOutputWithContext(ctx context.Context) SentryOrganizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryOrganizationOutput)
}

// SentryOrganizationArrayInput is an input type that accepts SentryOrganizationArray and SentryOrganizationArrayOutput values.
// You can construct a concrete instance of `SentryOrganizationArrayInput` via:
//
//	SentryOrganizationArray{ SentryOrganizationArgs{...} }
type SentryOrganizationArrayInput interface {
	pulumi.Input

	ToSentryOrganizationArrayOutput() SentryOrganizationArrayOutput
	ToSentryOrganizationArrayOutputWithContext(context.Context) SentryOrganizationArrayOutput
}

type SentryOrganizationArray []SentryOrganizationInput

func (SentryOrganizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SentryOrganization)(nil)).Elem()
}

func (i SentryOrganizationArray) ToSentryOrganizationArrayOutput() SentryOrganizationArrayOutput {
	return i.ToSentryOrganizationArrayOutputWithContext(context.Background())
}

func (i SentryOrganizationArray) ToSentryOrganizationArrayOutputWithContext(ctx context.Context) SentryOrganizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryOrganizationArrayOutput)
}

// SentryOrganizationMapInput is an input type that accepts SentryOrganizationMap and SentryOrganizationMapOutput values.
// You can construct a concrete instance of `SentryOrganizationMapInput` via:
//
//	SentryOrganizationMap{ "key": SentryOrganizationArgs{...} }
type SentryOrganizationMapInput interface {
	pulumi.Input

	ToSentryOrganizationMapOutput() SentryOrganizationMapOutput
	ToSentryOrganizationMapOutputWithContext(context.Context) SentryOrganizationMapOutput
}

type SentryOrganizationMap map[string]SentryOrganizationInput

func (SentryOrganizationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SentryOrganization)(nil)).Elem()
}

func (i SentryOrganizationMap) ToSentryOrganizationMapOutput() SentryOrganizationMapOutput {
	return i.ToSentryOrganizationMapOutputWithContext(context.Background())
}

func (i SentryOrganizationMap) ToSentryOrganizationMapOutputWithContext(ctx context.Context) SentryOrganizationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SentryOrganizationMapOutput)
}

type SentryOrganizationOutput struct{ *pulumi.OutputState }

func (SentryOrganizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SentryOrganization)(nil)).Elem()
}

func (o SentryOrganizationOutput) ToSentryOrganizationOutput() SentryOrganizationOutput {
	return o
}

func (o SentryOrganizationOutput) ToSentryOrganizationOutputWithContext(ctx context.Context) SentryOrganizationOutput {
	return o
}

// You agree to the applicable terms of service and privacy policy.
func (o SentryOrganizationOutput) AgreeTerms() pulumi.BoolOutput {
	return o.ApplyT(func(v *SentryOrganization) pulumi.BoolOutput { return v.AgreeTerms }).(pulumi.BoolOutput)
}

// The internal ID for this organization.
func (o SentryOrganizationOutput) InternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *SentryOrganization) pulumi.StringOutput { return v.InternalId }).(pulumi.StringOutput)
}

// The human readable name for the organization.
func (o SentryOrganizationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SentryOrganization) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique URL slug for this organization.
func (o SentryOrganizationOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *SentryOrganization) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

type SentryOrganizationArrayOutput struct{ *pulumi.OutputState }

func (SentryOrganizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SentryOrganization)(nil)).Elem()
}

func (o SentryOrganizationArrayOutput) ToSentryOrganizationArrayOutput() SentryOrganizationArrayOutput {
	return o
}

func (o SentryOrganizationArrayOutput) ToSentryOrganizationArrayOutputWithContext(ctx context.Context) SentryOrganizationArrayOutput {
	return o
}

func (o SentryOrganizationArrayOutput) Index(i pulumi.IntInput) SentryOrganizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SentryOrganization {
		return vs[0].([]*SentryOrganization)[vs[1].(int)]
	}).(SentryOrganizationOutput)
}

type SentryOrganizationMapOutput struct{ *pulumi.OutputState }

func (SentryOrganizationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SentryOrganization)(nil)).Elem()
}

func (o SentryOrganizationMapOutput) ToSentryOrganizationMapOutput() SentryOrganizationMapOutput {
	return o
}

func (o SentryOrganizationMapOutput) ToSentryOrganizationMapOutputWithContext(ctx context.Context) SentryOrganizationMapOutput {
	return o
}

func (o SentryOrganizationMapOutput) MapIndex(k pulumi.StringInput) SentryOrganizationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SentryOrganization {
		return vs[0].(map[string]*SentryOrganization)[vs[1].(string)]
	}).(SentryOrganizationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SentryOrganizationInput)(nil)).Elem(), &SentryOrganization{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryOrganizationArrayInput)(nil)).Elem(), SentryOrganizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SentryOrganizationMapInput)(nil)).Elem(), SentryOrganizationMap{})
	pulumi.RegisterOutputType(SentryOrganizationOutput{})
	pulumi.RegisterOutputType(SentryOrganizationArrayOutput{})
	pulumi.RegisterOutputType(SentryOrganizationMapOutput{})
}
