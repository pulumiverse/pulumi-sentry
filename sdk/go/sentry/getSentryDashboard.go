// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry/internal"
)

// ## Example Usage
func LookupSentryDashboard(ctx *pulumi.Context, args *LookupSentryDashboardArgs, opts ...pulumi.InvokeOption) (*LookupSentryDashboardResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSentryDashboardResult
	err := ctx.Invoke("sentry:index/getSentryDashboard:getSentryDashboard", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSentryDashboard.
type LookupSentryDashboardArgs struct {
	// The internal ID for this dashboard.
	InternalId string `pulumi:"internalId"`
	// The slug of the organization the dashboard belongs to.
	Organization string `pulumi:"organization"`
}

// A collection of values returned by getSentryDashboard.
type LookupSentryDashboardResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The internal ID for this dashboard.
	InternalId string `pulumi:"internalId"`
	// The slug of the organization the dashboard belongs to.
	Organization string `pulumi:"organization"`
	// Dashboard title.
	Title string `pulumi:"title"`
	// Dashboard widgets.
	Widgets []GetSentryDashboardWidget `pulumi:"widgets"`
}

func LookupSentryDashboardOutput(ctx *pulumi.Context, args LookupSentryDashboardOutputArgs, opts ...pulumi.InvokeOption) LookupSentryDashboardResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSentryDashboardResultOutput, error) {
			args := v.(LookupSentryDashboardArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupSentryDashboardResult
			secret, err := ctx.InvokePackageRaw("sentry:index/getSentryDashboard:getSentryDashboard", args, &rv, "", opts...)
			if err != nil {
				return LookupSentryDashboardResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupSentryDashboardResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupSentryDashboardResultOutput), nil
			}
			return output, nil
		}).(LookupSentryDashboardResultOutput)
}

// A collection of arguments for invoking getSentryDashboard.
type LookupSentryDashboardOutputArgs struct {
	// The internal ID for this dashboard.
	InternalId pulumi.StringInput `pulumi:"internalId"`
	// The slug of the organization the dashboard belongs to.
	Organization pulumi.StringInput `pulumi:"organization"`
}

func (LookupSentryDashboardOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSentryDashboardArgs)(nil)).Elem()
}

// A collection of values returned by getSentryDashboard.
type LookupSentryDashboardResultOutput struct{ *pulumi.OutputState }

func (LookupSentryDashboardResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSentryDashboardResult)(nil)).Elem()
}

func (o LookupSentryDashboardResultOutput) ToLookupSentryDashboardResultOutput() LookupSentryDashboardResultOutput {
	return o
}

func (o LookupSentryDashboardResultOutput) ToLookupSentryDashboardResultOutputWithContext(ctx context.Context) LookupSentryDashboardResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSentryDashboardResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryDashboardResult) string { return v.Id }).(pulumi.StringOutput)
}

// The internal ID for this dashboard.
func (o LookupSentryDashboardResultOutput) InternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryDashboardResult) string { return v.InternalId }).(pulumi.StringOutput)
}

// The slug of the organization the dashboard belongs to.
func (o LookupSentryDashboardResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryDashboardResult) string { return v.Organization }).(pulumi.StringOutput)
}

// Dashboard title.
func (o LookupSentryDashboardResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryDashboardResult) string { return v.Title }).(pulumi.StringOutput)
}

// Dashboard widgets.
func (o LookupSentryDashboardResultOutput) Widgets() GetSentryDashboardWidgetArrayOutput {
	return o.ApplyT(func(v LookupSentryDashboardResult) []GetSentryDashboardWidget { return v.Widgets }).(GetSentryDashboardWidgetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSentryDashboardResultOutput{})
}
