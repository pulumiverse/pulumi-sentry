// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sentry

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry/internal"
)

// Return a list of projects available to the authenticated session.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-sentry/sdk/go/sentry"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sentry.LookupSentryProject(ctx, &sentry.LookupSentryProjectArgs{
//				Organization: "my-organization",
//				Slug:         "my-project",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSentryProject(ctx *pulumi.Context, args *LookupSentryProjectArgs, opts ...pulumi.InvokeOption) (*LookupSentryProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSentryProjectResult
	err := ctx.Invoke("sentry:index/getSentryProject:getSentryProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSentryProject.
type LookupSentryProjectArgs struct {
	// The slug of the organization the resource belongs to.
	Organization string `pulumi:"organization"`
	// The slug of this project.
	Slug string `pulumi:"slug"`
}

// A collection of values returned by getSentryProject.
type LookupSentryProjectResult struct {
	// The color of this project.
	Color string `pulumi:"color"`
	// The date this project was created.
	DateCreated string `pulumi:"dateCreated"`
	// The features of this project.
	Features []string `pulumi:"features"`
	// The slug of this project.
	Id string `pulumi:"id"`
	// The internal ID of this project.
	InternalId string `pulumi:"internalId"`
	// Whether this project is public.
	IsPublic bool `pulumi:"isPublic"`
	// The name of this project.
	Name string `pulumi:"name"`
	// The slug of the organization the resource belongs to.
	Organization string `pulumi:"organization"`
	// The platform of this project.
	Platform string `pulumi:"platform"`
	// The slug of this project.
	Slug string `pulumi:"slug"`
}

func LookupSentryProjectOutput(ctx *pulumi.Context, args LookupSentryProjectOutputArgs, opts ...pulumi.InvokeOption) LookupSentryProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSentryProjectResult, error) {
			args := v.(LookupSentryProjectArgs)
			r, err := LookupSentryProject(ctx, &args, opts...)
			var s LookupSentryProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSentryProjectResultOutput)
}

// A collection of arguments for invoking getSentryProject.
type LookupSentryProjectOutputArgs struct {
	// The slug of the organization the resource belongs to.
	Organization pulumi.StringInput `pulumi:"organization"`
	// The slug of this project.
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (LookupSentryProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSentryProjectArgs)(nil)).Elem()
}

// A collection of values returned by getSentryProject.
type LookupSentryProjectResultOutput struct{ *pulumi.OutputState }

func (LookupSentryProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSentryProjectResult)(nil)).Elem()
}

func (o LookupSentryProjectResultOutput) ToLookupSentryProjectResultOutput() LookupSentryProjectResultOutput {
	return o
}

func (o LookupSentryProjectResultOutput) ToLookupSentryProjectResultOutputWithContext(ctx context.Context) LookupSentryProjectResultOutput {
	return o
}

// The color of this project.
func (o LookupSentryProjectResultOutput) Color() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) string { return v.Color }).(pulumi.StringOutput)
}

// The date this project was created.
func (o LookupSentryProjectResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

// The features of this project.
func (o LookupSentryProjectResultOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) []string { return v.Features }).(pulumi.StringArrayOutput)
}

// The slug of this project.
func (o LookupSentryProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

// The internal ID of this project.
func (o LookupSentryProjectResultOutput) InternalId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) string { return v.InternalId }).(pulumi.StringOutput)
}

// Whether this project is public.
func (o LookupSentryProjectResultOutput) IsPublic() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) bool { return v.IsPublic }).(pulumi.BoolOutput)
}

// The name of this project.
func (o LookupSentryProjectResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) string { return v.Name }).(pulumi.StringOutput)
}

// The slug of the organization the resource belongs to.
func (o LookupSentryProjectResultOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) string { return v.Organization }).(pulumi.StringOutput)
}

// The platform of this project.
func (o LookupSentryProjectResultOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) string { return v.Platform }).(pulumi.StringOutput)
}

// The slug of this project.
func (o LookupSentryProjectResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSentryProjectResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSentryProjectResultOutput{})
}
