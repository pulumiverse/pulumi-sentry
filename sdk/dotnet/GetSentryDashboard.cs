// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Sentry
{
    public static class GetSentryDashboard
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetSentryDashboardResult> InvokeAsync(GetSentryDashboardArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSentryDashboardResult>("sentry:index/getSentryDashboard:getSentryDashboard", args ?? new GetSentryDashboardArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetSentryDashboardResult> Invoke(GetSentryDashboardInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSentryDashboardResult>("sentry:index/getSentryDashboard:getSentryDashboard", args ?? new GetSentryDashboardInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSentryDashboardArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The internal ID for this dashboard.
        /// </summary>
        [Input("internalId", required: true)]
        public string InternalId { get; set; } = null!;

        /// <summary>
        /// The slug of the organization the dashboard belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public string Organization { get; set; } = null!;

        public GetSentryDashboardArgs()
        {
        }
        public static new GetSentryDashboardArgs Empty => new GetSentryDashboardArgs();
    }

    public sealed class GetSentryDashboardInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The internal ID for this dashboard.
        /// </summary>
        [Input("internalId", required: true)]
        public Input<string> InternalId { get; set; } = null!;

        /// <summary>
        /// The slug of the organization the dashboard belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        public GetSentryDashboardInvokeArgs()
        {
        }
        public static new GetSentryDashboardInvokeArgs Empty => new GetSentryDashboardInvokeArgs();
    }


    [OutputType]
    public sealed class GetSentryDashboardResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The internal ID for this dashboard.
        /// </summary>
        public readonly string InternalId;
        /// <summary>
        /// The slug of the organization the dashboard belongs to.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// Dashboard title.
        /// </summary>
        public readonly string Title;
        /// <summary>
        /// Dashboard widgets.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSentryDashboardWidgetResult> Widgets;

        [OutputConstructor]
        private GetSentryDashboardResult(
            string id,

            string internalId,

            string organization,

            string title,

            ImmutableArray<Outputs.GetSentryDashboardWidgetResult> widgets)
        {
            Id = id;
            InternalId = internalId;
            Organization = organization;
            Title = title;
            Widgets = widgets;
        }
    }
}
