// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Sentry
{
    public static class GetSentryOrganizationIntegration
    {
        /// <summary>
        /// Sentry Organization Integration data source.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sentry = Pulumi.Sentry;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve a Github organization integration
        ///     var github = Sentry.GetSentryOrganizationIntegration.Invoke(new()
        ///     {
        ///         Organization = "my-organization",
        ///         ProviderKey = "github",
        ///         Name = "my-github-organization",
        ///     });
        /// 
        ///     // Retrieve a Slack integration
        ///     var slack = Sentry.GetSentryOrganizationIntegration.Invoke(new()
        ///     {
        ///         Organization = "my-organization",
        ///         ProviderKey = "slack",
        ///         Name = "Slack Workspace",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSentryOrganizationIntegrationResult> InvokeAsync(GetSentryOrganizationIntegrationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSentryOrganizationIntegrationResult>("sentry:index/getSentryOrganizationIntegration:getSentryOrganizationIntegration", args ?? new GetSentryOrganizationIntegrationArgs(), options.WithDefaults());

        /// <summary>
        /// Sentry Organization Integration data source.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sentry = Pulumi.Sentry;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Retrieve a Github organization integration
        ///     var github = Sentry.GetSentryOrganizationIntegration.Invoke(new()
        ///     {
        ///         Organization = "my-organization",
        ///         ProviderKey = "github",
        ///         Name = "my-github-organization",
        ///     });
        /// 
        ///     // Retrieve a Slack integration
        ///     var slack = Sentry.GetSentryOrganizationIntegration.Invoke(new()
        ///     {
        ///         Organization = "my-organization",
        ///         ProviderKey = "slack",
        ///         Name = "Slack Workspace",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSentryOrganizationIntegrationResult> Invoke(GetSentryOrganizationIntegrationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSentryOrganizationIntegrationResult>("sentry:index/getSentryOrganizationIntegration:getSentryOrganizationIntegration", args ?? new GetSentryOrganizationIntegrationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSentryOrganizationIntegrationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the organization integration.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The slug of the organization the integration belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public string Organization { get; set; } = null!;

        /// <summary>
        /// The key of the organization integration provider.
        /// </summary>
        [Input("providerKey", required: true)]
        public string ProviderKey { get; set; } = null!;

        public GetSentryOrganizationIntegrationArgs()
        {
        }
        public static new GetSentryOrganizationIntegrationArgs Empty => new GetSentryOrganizationIntegrationArgs();
    }

    public sealed class GetSentryOrganizationIntegrationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the organization integration.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The slug of the organization the integration belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        /// <summary>
        /// The key of the organization integration provider.
        /// </summary>
        [Input("providerKey", required: true)]
        public Input<string> ProviderKey { get; set; } = null!;

        public GetSentryOrganizationIntegrationInvokeArgs()
        {
        }
        public static new GetSentryOrganizationIntegrationInvokeArgs Empty => new GetSentryOrganizationIntegrationInvokeArgs();
    }


    [OutputType]
    public sealed class GetSentryOrganizationIntegrationResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The internal ID for this organization integration.
        /// </summary>
        public readonly string InternalId;
        /// <summary>
        /// The name of the organization integration.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The slug of the organization the integration belongs to.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// The key of the organization integration provider.
        /// </summary>
        public readonly string ProviderKey;

        [OutputConstructor]
        private GetSentryOrganizationIntegrationResult(
            string id,

            string internalId,

            string name,

            string organization,

            string providerKey)
        {
            Id = id;
            InternalId = internalId;
            Name = name;
            Organization = organization;
            ProviderKey = providerKey;
        }
    }
}
