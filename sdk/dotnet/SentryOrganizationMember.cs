// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Sentry
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sentry = Pulumiverse.Sentry;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create an organization member
    ///     var johnDoe = new Sentry.SentryOrganizationMember("john_doe", new()
    ///     {
    ///         Organization = "my-organization",
    ///         Email = "test@example.com",
    ///         Role = "member",
    ///         Teams = new[]
    ///         {
    ///             "my-team",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// import using the organization, membership id from the URL:
    /// 
    /// https://sentry.io/settings/[org-slug]/members/[member-id]/
    /// 
    /// ```sh
    /// $ pulumi import sentry:index/sentryOrganizationMember:SentryOrganizationMember john_doe org-slug/member-id
    /// ```
    /// </summary>
    [SentryResourceType("sentry:index/sentryOrganizationMember:SentryOrganizationMember")]
    public partial class SentryOrganizationMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The email of the organization member.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// The invite has expired.
        /// </summary>
        [Output("expired")]
        public Output<bool> Expired { get; private set; } = null!;

        /// <summary>
        /// The internal ID for this organization membership.
        /// </summary>
        [Output("internalId")]
        public Output<string> InternalId { get; private set; } = null!;

        /// <summary>
        /// The slug of the organization the user should be invited to.
        /// </summary>
        [Output("organization")]
        public Output<string> Organization { get; private set; } = null!;

        /// <summary>
        /// The invite is pending.
        /// </summary>
        [Output("pending")]
        public Output<bool> Pending { get; private set; } = null!;

        /// <summary>
        /// This is the role of the organization member.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// The teams the organization member should be added to.
        /// </summary>
        [Output("teams")]
        public Output<ImmutableArray<string>> Teams { get; private set; } = null!;


        /// <summary>
        /// Create a SentryOrganizationMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SentryOrganizationMember(string name, SentryOrganizationMemberArgs args, CustomResourceOptions? options = null)
            : base("sentry:index/sentryOrganizationMember:SentryOrganizationMember", name, args ?? new SentryOrganizationMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SentryOrganizationMember(string name, Input<string> id, SentryOrganizationMemberState? state = null, CustomResourceOptions? options = null)
            : base("sentry:index/sentryOrganizationMember:SentryOrganizationMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SentryOrganizationMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SentryOrganizationMember Get(string name, Input<string> id, SentryOrganizationMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new SentryOrganizationMember(name, id, state, options);
        }
    }

    public sealed class SentryOrganizationMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email of the organization member.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// The slug of the organization the user should be invited to.
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        /// <summary>
        /// This is the role of the organization member.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("teams")]
        private InputList<string>? _teams;

        /// <summary>
        /// The teams the organization member should be added to.
        /// </summary>
        public InputList<string> Teams
        {
            get => _teams ?? (_teams = new InputList<string>());
            set => _teams = value;
        }

        public SentryOrganizationMemberArgs()
        {
        }
        public static new SentryOrganizationMemberArgs Empty => new SentryOrganizationMemberArgs();
    }

    public sealed class SentryOrganizationMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email of the organization member.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// The invite has expired.
        /// </summary>
        [Input("expired")]
        public Input<bool>? Expired { get; set; }

        /// <summary>
        /// The internal ID for this organization membership.
        /// </summary>
        [Input("internalId")]
        public Input<string>? InternalId { get; set; }

        /// <summary>
        /// The slug of the organization the user should be invited to.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        /// <summary>
        /// The invite is pending.
        /// </summary>
        [Input("pending")]
        public Input<bool>? Pending { get; set; }

        /// <summary>
        /// This is the role of the organization member.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("teams")]
        private InputList<string>? _teams;

        /// <summary>
        /// The teams the organization member should be added to.
        /// </summary>
        public InputList<string> Teams
        {
            get => _teams ?? (_teams = new InputList<string>());
            set => _teams = value;
        }

        public SentryOrganizationMemberState()
        {
        }
        public static new SentryOrganizationMemberState Empty => new SentryOrganizationMemberState();
    }
}
