// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Sentry
{
    public static class GetSentryKey
    {
        /// <summary>
        /// Retrieve a Project's Client Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sentry = Pulumi.Sentry;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Sentry.GetSentryKey.Invoke(new()
        ///     {
        ///         Name = "Default",
        ///         Organization = "my-organization",
        ///         Project = "web-app",
        ///     });
        /// 
        ///     var first = Sentry.GetSentryKey.Invoke(new()
        ///     {
        ///         First = true,
        ///         Organization = "my-organization",
        ///         Project = "web-app",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSentryKeyResult> InvokeAsync(GetSentryKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSentryKeyResult>("sentry:index/getSentryKey:getSentryKey", args ?? new GetSentryKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve a Project's Client Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sentry = Pulumi.Sentry;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Sentry.GetSentryKey.Invoke(new()
        ///     {
        ///         Name = "Default",
        ///         Organization = "my-organization",
        ///         Project = "web-app",
        ///     });
        /// 
        ///     var first = Sentry.GetSentryKey.Invoke(new()
        ///     {
        ///         First = true,
        ///         Organization = "my-organization",
        ///         Project = "web-app",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSentryKeyResult> Invoke(GetSentryKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSentryKeyResult>("sentry:index/getSentryKey:getSentryKey", args ?? new GetSentryKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSentryKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Boolean flag indicating that we want the first key of the returned keys.
        /// </summary>
        [Input("first")]
        public bool? First { get; set; }

        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the client key.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public string Organization { get; set; } = null!;

        /// <summary>
        /// The slug of the project the resource belongs to.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetSentryKeyArgs()
        {
        }
        public static new GetSentryKeyArgs Empty => new GetSentryKeyArgs();
    }

    public sealed class GetSentryKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Boolean flag indicating that we want the first key of the returned keys.
        /// </summary>
        [Input("first")]
        public Input<bool>? First { get; set; }

        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the client key.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        /// <summary>
        /// The slug of the project the resource belongs to.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetSentryKeyInvokeArgs()
        {
        }
        public static new GetSentryKeyInvokeArgs Empty => new GetSentryKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSentryKeyResult
    {
        /// <summary>
        /// Security header endpoint for features like CSP and Expect-CT reports.
        /// </summary>
        public readonly string DsnCsp;
        /// <summary>
        /// The DSN tells the SDK where to send the events to.
        /// </summary>
        public readonly string DsnPublic;
        /// <summary>
        /// Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.
        /// </summary>
        public readonly string DsnSecret;
        /// <summary>
        /// Boolean flag indicating that we want the first key of the returned keys.
        /// </summary>
        public readonly bool? First;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the client key.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// The slug of the project the resource belongs to.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// The ID of the project that the key belongs to.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// The public key.
        /// </summary>
        public readonly string Public;
        /// <summary>
        /// Number of events that can be reported within the rate limit window.
        /// </summary>
        public readonly int RateLimitCount;
        /// <summary>
        /// Length of time that will be considered when checking the rate limit.
        /// </summary>
        public readonly int RateLimitWindow;
        /// <summary>
        /// The secret key.
        /// </summary>
        public readonly string Secret;

        [OutputConstructor]
        private GetSentryKeyResult(
            string dsnCsp,

            string dsnPublic,

            string dsnSecret,

            bool? first,

            string? id,

            string? name,

            string organization,

            string project,

            string projectId,

            string @public,

            int rateLimitCount,

            int rateLimitWindow,

            string secret)
        {
            DsnCsp = dsnCsp;
            DsnPublic = dsnPublic;
            DsnSecret = dsnSecret;
            First = first;
            Id = id;
            Name = name;
            Organization = organization;
            Project = project;
            ProjectId = projectId;
            Public = @public;
            RateLimitCount = rateLimitCount;
            RateLimitWindow = rateLimitWindow;
            Secret = secret;
        }
    }
}
