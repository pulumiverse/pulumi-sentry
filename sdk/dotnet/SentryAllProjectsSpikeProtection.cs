// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Sentry
{
    /// <summary>
    /// Enable spike protection for all projects in an organization.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sentry = Pulumi.Sentry;
    /// using Sentry = Pulumiverse.Sentry;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Enable spike protection for several projects in a Sentry organization.
    ///     var web_app = new Sentry.SentryProject("web-app", new()
    ///     {
    ///         Organization = "my-organization",
    ///         Teams = new[]
    ///         {
    ///             "my-first-team",
    ///         },
    ///         Slug = "web-app",
    ///         Platform = "go",
    ///     });
    /// 
    ///     var mobile_app = new Sentry.SentryProject("mobile-app", new()
    ///     {
    ///         Organization = "my-organization",
    ///         Teams = new[]
    ///         {
    ///             "my-second-team",
    ///         },
    ///         Slug = "mobile-app",
    ///         Platform = "android",
    ///     });
    /// 
    ///     var mainSentryAllProjectsSpikeProtection = new Sentry.SentryAllProjectsSpikeProtection("mainSentryAllProjectsSpikeProtection", new()
    ///     {
    ///         Organization = "my-organization",
    ///         Projects = new[]
    ///         {
    ///             web_app.Id,
    ///             mobile_app.Id,
    ///         },
    ///         Enabled = true,
    ///     });
    /// 
    ///     var all = Sentry.GetSentryAllProjects.Invoke(new()
    ///     {
    ///         Organization = "my-organization",
    ///     });
    /// 
    ///     var mainIndex_sentryAllProjectsSpikeProtectionSentryAllProjectsSpikeProtection = new Sentry.SentryAllProjectsSpikeProtection("mainIndex/sentryAllProjectsSpikeProtectionSentryAllProjectsSpikeProtection", new()
    ///     {
    ///         Organization = all.Apply(getSentryAllProjectsResult =&gt; getSentryAllProjectsResult.Organization),
    ///         Projects = all.Apply(getSentryAllProjectsResult =&gt; getSentryAllProjectsResult.ProjectSlugs),
    ///         Enabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [SentryResourceType("sentry:index/sentryAllProjectsSpikeProtection:SentryAllProjectsSpikeProtection")]
    public partial class SentryAllProjectsSpikeProtection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off for all projects.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        [Output("organization")]
        public Output<string> Organization { get; private set; } = null!;

        /// <summary>
        /// The slugs of the projects to enable or disable spike protection for.
        /// </summary>
        [Output("projects")]
        public Output<ImmutableArray<string>> Projects { get; private set; } = null!;


        /// <summary>
        /// Create a SentryAllProjectsSpikeProtection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SentryAllProjectsSpikeProtection(string name, SentryAllProjectsSpikeProtectionArgs args, CustomResourceOptions? options = null)
            : base("sentry:index/sentryAllProjectsSpikeProtection:SentryAllProjectsSpikeProtection", name, args ?? new SentryAllProjectsSpikeProtectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SentryAllProjectsSpikeProtection(string name, Input<string> id, SentryAllProjectsSpikeProtectionState? state = null, CustomResourceOptions? options = null)
            : base("sentry:index/sentryAllProjectsSpikeProtection:SentryAllProjectsSpikeProtection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SentryAllProjectsSpikeProtection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SentryAllProjectsSpikeProtection Get(string name, Input<string> id, SentryAllProjectsSpikeProtectionState? state = null, CustomResourceOptions? options = null)
        {
            return new SentryAllProjectsSpikeProtection(name, id, state, options);
        }
    }

    public sealed class SentryAllProjectsSpikeProtectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off for all projects.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        [Input("projects", required: true)]
        private InputList<string>? _projects;

        /// <summary>
        /// The slugs of the projects to enable or disable spike protection for.
        /// </summary>
        public InputList<string> Projects
        {
            get => _projects ?? (_projects = new InputList<string>());
            set => _projects = value;
        }

        public SentryAllProjectsSpikeProtectionArgs()
        {
        }
        public static new SentryAllProjectsSpikeProtectionArgs Empty => new SentryAllProjectsSpikeProtectionArgs();
    }

    public sealed class SentryAllProjectsSpikeProtectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off for all projects.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        [Input("projects")]
        private InputList<string>? _projects;

        /// <summary>
        /// The slugs of the projects to enable or disable spike protection for.
        /// </summary>
        public InputList<string> Projects
        {
            get => _projects ?? (_projects = new InputList<string>());
            set => _projects = value;
        }

        public SentryAllProjectsSpikeProtectionState()
        {
        }
        public static new SentryAllProjectsSpikeProtectionState Empty => new SentryAllProjectsSpikeProtectionState();
    }
}
