// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Sentry
{
    /// <summary>
    /// Sentry Project Inbound Data Filter resource. This resource is used to create and manage inbound data filters for a project. For more information on what filters are available, see the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sentry = Pulumiverse.Sentry;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Sentry.SentryProject("default", new()
    ///     {
    ///         Organization = "my-organization",
    ///         Teams = new[]
    ///         {
    ///             "my-first-team",
    ///             "my-second-team",
    ///         },
    ///         Platform = "javascript",
    ///     });
    /// 
    ///     // Create an inbound data filter for a project
    ///     var testSentryProjectInboundDataFilter = new Sentry.SentryProjectInboundDataFilter("testSentryProjectInboundDataFilter", new()
    ///     {
    ///         Organization = @default.Organization,
    ///         Project = @default.Id,
    ///         FilterId = "browser-extensions",
    ///         Active = true,
    ///     });
    /// 
    ///     // Create an inbound data filter with subfilters. Only applicable to the
    ///     // `legacy-browser` filter.
    ///     var testIndex_sentryProjectInboundDataFilterSentryProjectInboundDataFilter = new Sentry.SentryProjectInboundDataFilter("testIndex/sentryProjectInboundDataFilterSentryProjectInboundDataFilter", new()
    ///     {
    ///         Organization = @default.Organization,
    ///         Project = @default.Id,
    ///         FilterId = "legacy-browser",
    ///         Subfilters = new[]
    ///         {
    ///             "ie_pre_9",
    ///             "ie9",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [SentryResourceType("sentry:index/sentryProjectInboundDataFilter:SentryProjectInboundDataFilter")]
    public partial class SentryProjectInboundDataFilter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off.
        /// </summary>
        [Output("active")]
        public Output<bool?> Active { get; private set; } = null!;

        /// <summary>
        /// The type of filter toggle to update. See the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available filters.
        /// </summary>
        [Output("filterId")]
        public Output<string> FilterId { get; private set; } = null!;

        /// <summary>
        /// The slug of the organization the project belongs to.
        /// </summary>
        [Output("organization")]
        public Output<string> Organization { get; private set; } = null!;

        /// <summary>
        /// The slug of the project to create the filter for.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Specifies which legacy browser filters should be active. Anything excluded from the list will be disabled. See the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available subfilters.
        /// </summary>
        [Output("subfilters")]
        public Output<ImmutableArray<string>> Subfilters { get; private set; } = null!;


        /// <summary>
        /// Create a SentryProjectInboundDataFilter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SentryProjectInboundDataFilter(string name, SentryProjectInboundDataFilterArgs args, CustomResourceOptions? options = null)
            : base("sentry:index/sentryProjectInboundDataFilter:SentryProjectInboundDataFilter", name, args ?? new SentryProjectInboundDataFilterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SentryProjectInboundDataFilter(string name, Input<string> id, SentryProjectInboundDataFilterState? state = null, CustomResourceOptions? options = null)
            : base("sentry:index/sentryProjectInboundDataFilter:SentryProjectInboundDataFilter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SentryProjectInboundDataFilter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SentryProjectInboundDataFilter Get(string name, Input<string> id, SentryProjectInboundDataFilterState? state = null, CustomResourceOptions? options = null)
        {
            return new SentryProjectInboundDataFilter(name, id, state, options);
        }
    }

    public sealed class SentryProjectInboundDataFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The type of filter toggle to update. See the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available filters.
        /// </summary>
        [Input("filterId", required: true)]
        public Input<string> FilterId { get; set; } = null!;

        /// <summary>
        /// The slug of the organization the project belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        /// <summary>
        /// The slug of the project to create the filter for.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("subfilters")]
        private InputList<string>? _subfilters;

        /// <summary>
        /// Specifies which legacy browser filters should be active. Anything excluded from the list will be disabled. See the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available subfilters.
        /// </summary>
        public InputList<string> Subfilters
        {
            get => _subfilters ?? (_subfilters = new InputList<string>());
            set => _subfilters = value;
        }

        public SentryProjectInboundDataFilterArgs()
        {
        }
        public static new SentryProjectInboundDataFilterArgs Empty => new SentryProjectInboundDataFilterArgs();
    }

    public sealed class SentryProjectInboundDataFilterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Toggle the browser-extensions, localhost, filtered-transaction, or web-crawlers filter on or off.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The type of filter toggle to update. See the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available filters.
        /// </summary>
        [Input("filterId")]
        public Input<string>? FilterId { get; set; }

        /// <summary>
        /// The slug of the organization the project belongs to.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        /// <summary>
        /// The slug of the project to create the filter for.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("subfilters")]
        private InputList<string>? _subfilters;

        /// <summary>
        /// Specifies which legacy browser filters should be active. Anything excluded from the list will be disabled. See the [Sentry documentation](https://docs.sentry.io/api/projects/update-an-inbound-data-filter/) for a list of available subfilters.
        /// </summary>
        public InputList<string> Subfilters
        {
            get => _subfilters ?? (_subfilters = new InputList<string>());
            set => _subfilters = value;
        }

        public SentryProjectInboundDataFilterState()
        {
        }
        public static new SentryProjectInboundDataFilterState Empty => new SentryProjectInboundDataFilterState();
    }
}
