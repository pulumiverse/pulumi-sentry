// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Sentry
{
    /// <summary>
    /// Sentry Team Member resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Sentry = Pulumiverse.Sentry;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Add a member to a team
    ///     var defaultSentryOrganizationMember = new Sentry.SentryOrganizationMember("defaultSentryOrganizationMember", new()
    ///     {
    ///         Organization = "my-organization",
    ///         Email = "test@example.com",
    ///         Role = "member",
    ///     });
    /// 
    ///     var defaultSentryTeam = new Sentry.SentryTeam("defaultSentryTeam", new()
    ///     {
    ///         Organization = "my-organization",
    ///         Slug = "my-team",
    ///     });
    /// 
    ///     var defaultSentryTeamMember = new Sentry.SentryTeamMember("defaultSentryTeamMember", new()
    ///     {
    ///         Organization = "my-organization",
    ///         Team = defaultSentryTeam.Id,
    ///         MemberId = defaultSentryOrganizationMember.InternalId,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// import using the member ID and team slug from the URL:
    /// 
    /// https://[org-slug].sentry.io/settings/teams/[team-slug]/members/
    /// 
    /// https://[org-slug].sentry.io/settings/members/[member-id]/
    /// 
    /// ```sh
    /// $ pulumi import sentry:index/sentryTeamMember:SentryTeamMember default org-slug/team-slug/member-id
    /// ```
    /// </summary>
    [SentryResourceType("sentry:index/sentryTeamMember:SentryTeamMember")]
    public partial class SentryTeamMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The effective role of the member in the team. This represents the highest role, determined by comparing the lower role assigned by the member's organizational role with the role assigned by the member's team role.
        /// </summary>
        [Output("effectiveRole")]
        public Output<string> EffectiveRole { get; private set; } = null!;

        /// <summary>
        /// The ID of the member to add to the team.
        /// </summary>
        [Output("memberId")]
        public Output<string> MemberId { get; private set; } = null!;

        /// <summary>
        /// The slug of the organization the team should be created for.
        /// </summary>
        [Output("organization")]
        public Output<string> Organization { get; private set; } = null!;

        /// <summary>
        /// The role of the member in the team. When not set, resolve to the minimum team role given by this member's organization role.
        /// </summary>
        [Output("role")]
        public Output<string?> Role { get; private set; } = null!;

        /// <summary>
        /// The slug of the team to add the member to.
        /// </summary>
        [Output("team")]
        public Output<string> Team { get; private set; } = null!;


        /// <summary>
        /// Create a SentryTeamMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SentryTeamMember(string name, SentryTeamMemberArgs args, CustomResourceOptions? options = null)
            : base("sentry:index/sentryTeamMember:SentryTeamMember", name, args ?? new SentryTeamMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SentryTeamMember(string name, Input<string> id, SentryTeamMemberState? state = null, CustomResourceOptions? options = null)
            : base("sentry:index/sentryTeamMember:SentryTeamMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SentryTeamMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SentryTeamMember Get(string name, Input<string> id, SentryTeamMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new SentryTeamMember(name, id, state, options);
        }
    }

    public sealed class SentryTeamMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the member to add to the team.
        /// </summary>
        [Input("memberId", required: true)]
        public Input<string> MemberId { get; set; } = null!;

        /// <summary>
        /// The slug of the organization the team should be created for.
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        /// <summary>
        /// The role of the member in the team. When not set, resolve to the minimum team role given by this member's organization role.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The slug of the team to add the member to.
        /// </summary>
        [Input("team", required: true)]
        public Input<string> Team { get; set; } = null!;

        public SentryTeamMemberArgs()
        {
        }
        public static new SentryTeamMemberArgs Empty => new SentryTeamMemberArgs();
    }

    public sealed class SentryTeamMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The effective role of the member in the team. This represents the highest role, determined by comparing the lower role assigned by the member's organizational role with the role assigned by the member's team role.
        /// </summary>
        [Input("effectiveRole")]
        public Input<string>? EffectiveRole { get; set; }

        /// <summary>
        /// The ID of the member to add to the team.
        /// </summary>
        [Input("memberId")]
        public Input<string>? MemberId { get; set; }

        /// <summary>
        /// The slug of the organization the team should be created for.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        /// <summary>
        /// The role of the member in the team. When not set, resolve to the minimum team role given by this member's organization role.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The slug of the team to add the member to.
        /// </summary>
        [Input("team")]
        public Input<string>? Team { get; set; }

        public SentryTeamMemberState()
        {
        }
        public static new SentryTeamMemberState Empty => new SentryTeamMemberState();
    }
}
