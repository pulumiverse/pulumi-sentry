// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Sentry
{
    public static class GetSentryAllKeys
    {
        /// <summary>
        /// List a Project's Client Keys.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sentry = Pulumi.Sentry;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Sentry.GetSentryAllKeys.Invoke(new()
        ///     {
        ///         Organization = "my-organization",
        ///         Project = "web-app",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSentryAllKeysResult> InvokeAsync(GetSentryAllKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSentryAllKeysResult>("sentry:index/getSentryAllKeys:getSentryAllKeys", args ?? new GetSentryAllKeysArgs(), options.WithDefaults());

        /// <summary>
        /// List a Project's Client Keys.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Sentry = Pulumi.Sentry;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Sentry.GetSentryAllKeys.Invoke(new()
        ///     {
        ///         Organization = "my-organization",
        ///         Project = "web-app",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSentryAllKeysResult> Invoke(GetSentryAllKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSentryAllKeysResult>("sentry:index/getSentryAllKeys:getSentryAllKeys", args ?? new GetSentryAllKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSentryAllKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter client keys by `active` or `inactive`. Defaults to returning all keys if not specified.
        /// </summary>
        [Input("filterStatus")]
        public string? FilterStatus { get; set; }

        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public string Organization { get; set; } = null!;

        /// <summary>
        /// The slug of the project the resource belongs to.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetSentryAllKeysArgs()
        {
        }
        public static new GetSentryAllKeysArgs Empty => new GetSentryAllKeysArgs();
    }

    public sealed class GetSentryAllKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter client keys by `active` or `inactive`. Defaults to returning all keys if not specified.
        /// </summary>
        [Input("filterStatus")]
        public Input<string>? FilterStatus { get; set; }

        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        [Input("organization", required: true)]
        public Input<string> Organization { get; set; } = null!;

        /// <summary>
        /// The slug of the project the resource belongs to.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetSentryAllKeysInvokeArgs()
        {
        }
        public static new GetSentryAllKeysInvokeArgs Empty => new GetSentryAllKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetSentryAllKeysResult
    {
        /// <summary>
        /// Filter client keys by `active` or `inactive`. Defaults to returning all keys if not specified.
        /// </summary>
        public readonly string? FilterStatus;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The list of client keys.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSentryAllKeysKeyResult> Keys;
        /// <summary>
        /// The slug of the organization the resource belongs to.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// The slug of the project the resource belongs to.
        /// </summary>
        public readonly string Project;

        [OutputConstructor]
        private GetSentryAllKeysResult(
            string? filterStatus,

            string id,

            ImmutableArray<Outputs.GetSentryAllKeysKeyResult> keys,

            string organization,

            string project)
        {
            FilterStatus = filterStatus;
            Id = id;
            Keys = keys;
            Organization = organization;
            Project = project;
        }
    }
}
